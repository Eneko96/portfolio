---
import Layout from '../../layouts/Layout.astro';
import HeadLine from '../../components/HeadLine.astro';
import { BookSelector } from '../../components/BookSelector';
import { Input, TextArea, Radio } from '../../components/Input/Input';
import { Notification } from '../../../tag';
const MAX_DESCRIPTION_LENGTH = 500;
const salaryRanges = [
  {
    label: 'Less than 60.000â‚¬',
    value: 'less_than_60k',
  },
  {
    label: 'Between 60.000â‚¬ and 70.000â‚¬',
    value: 'between_60k_and_70k',
  },
  {
    label: 'Between 70.000â‚¬ and 90.000â‚¬',
    value: 'between_70k_and_90k',
  },
  {
    label: 'Between 90.000â‚¬ and 100.000â‚¬',
    value: 'between_90k_and_100k',
  },
];

const validations = {
    inputs: {
        name: (value: string) => /^[A-Za-z\s\-']+$/.test(value),
        surname: (value: string) => /^[A-Za-z\s\-']+$/.test(value),
        email: (value: string) => /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(value),
        company: (value: string) => /^[A-Za-z\s\-']+$/.test(value),
        description: (value: string) => value.length <= MAX_DESCRIPTION_LENGTH
      }
  }
---

<Layout title="AstroEnekofolio!">
  <div role="main">
    <HeadLine title="Nice to e-meet you!" />
    <div class="book-title">
      <h2>Book a Call</h2>
      <p>
        Would you like to chat and get to know me a bit better? Don&apos;t
        hesitate. Come in and book a call with me!
      </p>
    </div>

    <main>
    <form class="book-form">
      <div class="book-form-name-surname">
        <Input client:load label="Name" required name="name" validation={validations.inputs.name} />
        <Input client:load client:load label="Surname" required name="surname" validation={validations.inputs.surname}/>
      </div>

      <Input client:load label="Email" required name="email" type="email" validation={validations.inputs.email}/>
      <Input client:load label="Company Name" required name="company_name" validation={validations.inputs.company}/>

      <div class="tag-ds input-wrapper">
        <label class="caption">
          Position you want to hire me for
          <small>*</small>
        </label>
        <select name="position">
          <option value="Front End Developer">Front End Developer</option>
          <option value="UX/UI Developer">UX/UI Developer</option>
          <option value="Full Stack Developer">Full Stack Developer</option>
        </select>
        <div class="material-icons select-icon">expand_more</div>
      </div>

      <TextArea client:only  label="Something else about" name="additional_information" validation={validations.inputs.description}/>

      <div>
        <label class="caption">Anual Salary Range</label>
        <div class="book-radio-grouper">
          {
            salaryRanges.map((salary, idx) => (
              <Radio
              validation={() => {}}
                name="anual_revenue"
                label={salary.label}
                value={salary.value}
                id={`id-${idx}`}
                key={idx + salary.value}
              />
            ))
          }
          <Radio name="anual_revenue" label="Even more than that??? ðŸ˜±" id={`id-${salaryRanges.length + 1}`} validation={() => {}}/>
        </div>
      </div>

      <BookSelector client:load />

      <button type="submit" class="button large" id="send-email" style={{ width: 'fit-content' }}>
        Book
      </button>
      <!-- <ReCaptcha sitekey={import.meta.env.VITE_RECAPTCHA_SITE_KEY} /> -->

      <p class="book-recopilation-message">
        I am not saving any of this details. By clicking book you are just
        booking a call ðŸ˜‰ 
      </p>
    </form>
    <Notification client:only success renderAsPortal show>
      The reservation has been successfully requested! Soon will you will
      recieve a google meet invitation! I am looking forward to talk with you!
    </Notification>
  </div>
  </main>
</Layout>
<style>
  main {
    width: 100%;
  }
  form {
      padding: unset !important;
    }
  h1 {
    font-size: 3rem;
    font-weight: 800;
    margin: 0;
  }
  .book-form {
      max-width: 583px;
      display: grid;
      gap: 32px;
      margin-top: 20px;
      margin-left: 40px;
    }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    line-height: 1.6;
    margin: 1rem 0;
    border: 1px solid rgba(var(--accent), 25%);
    background-color: white;
    padding: 1rem;
    border-radius: 0.4rem;
  }
  .instructions code {
    font-size: 0.875em;
    font-weight: bold;
    background: rgba(var(--accent), 12%);
    color: rgb(var(--accent));
    border-radius: 4px;
    padding: 0.3em 0.45em;
  }
  .instructions strong {
    color: rgb(var(--accent));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 1rem;
    padding: 0;
  }
  select{
      position: relative;
      max-width: 100%;
      appearance: none !important;
    }
  .select-icon {
      position: absolute;
      right: calc(2 * 8px);
      top: 50%;
    }
</style>
<script src="https://unpkg.com/resend" type="module" is:inline></script>
<script>
  const sendButton = document.querySelector('#send-email');

  sendButton?.addEventListener('click', async (event) => {
    event.preventDefault();
    const form = event.target.form;
    const formValues = {
        name: form.elements['name']?.value, 
        surname: form.elements['surname']?.value, 
        company_name: form.elements['company_name']?.value, 
        email: form.elements['email']?.value, 
        position: form.elements['position']?.value, 
        aditional_information: form.elements['aditional_information']?.value, 
        calendar: window.calendar.day, 
        anual_revenue: form.elements['anual_revenue']?.value, 
      }

    const res = await fetch('https://enekofolio-email-service.imoreno-main.workers.dev', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
          },
        mode: 'no-cors',
        body: JSON.stringify({...formValues})
      });
  })
</script>

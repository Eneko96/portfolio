{"version":3,"file":"index.js","sources":["../../src/components/breadcrumb/breadcrumbItem.tsx","../../src/components/dropdown/dropdownButton.tsx","../../src/components/dropdown/dropdownMenu.tsx","../../src/components/dropdown/dropdown.tsx","../../src/components/breadcrumb/breadcrumb.tsx"],"sourcesContent":["import React from 'react';\n\nexport interface IBreadcrumbItemProps {\n  /**\n   * Identifies the Breadcrumb item\n   */\n  id: string;\n  /**\n   * Breadcrumb title to display\n   */\n  title: string;\n  /**\n   * Breadcrumb link\n   */\n  href: string;\n  [others: string]: any;\n}\n\nconst BreadcrumbItem: React.FC<IBreadcrumbItemProps> = (props) => {\n  const {id, title, href, ...rest} = props;\n\n  const truncateBreadcrumbTitle = () => {\n    return title.length > 30 ? title.substring(0, 30) + '...' : title;\n  };\n\n  return (\n    <a\n      href={href}\n      target=\"_self\"\n      id={id}\n      key={id}\n      data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-link` : undefined}\n      className=\"breadcrumb-item\"\n      {...rest}\n    >\n      {truncateBreadcrumbTitle()}\n    </a>\n  );\n};\n\nexport default BreadcrumbItem;\n","import React, {useEffect} from 'react';\nimport {useDropdown} from './dropdown';\nexport interface DropdownButtonProps {\n  className?: string;\n  disabled?: boolean;\n  children: React.ReactNode;\n\n  [others: string]: any;\n}\n\nconst DropdownButton: React.FC<DropdownButtonProps> = ({children, className, disabled, ...rest}) => {\n  const {onToggleMenu, setDropdownButtonDimensions, showMenu} = useDropdown();\n  const dropdownButtonRef = React.useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (dropdownButtonRef && dropdownButtonRef.current) {\n      const positionButton = dropdownButtonRef.current.getBoundingClientRect();\n      if (positionButton) setDropdownButtonDimensions({width: positionButton.width, height: positionButton.height});\n    }\n  }, [showMenu]);\n  return (\n    <div\n      className={`dropdown-button${disabled ? '_disabled' : ''} ${className || ''}`}\n      onClick={onToggleMenu}\n      ref={dropdownButtonRef}\n      {...rest}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default React.memo(DropdownButton);\n","import React, {useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport {useDropdown} from './dropdown';\n\nexport interface DropdownMenuProps {\n  className?: string;\n  [others: string]: any;\n}\n\nconst DropdownMenu: React.FC<DropdownMenuProps> = ({className, children, ...rest}) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const {showMenu, setDropdownMenuDimensions, position, dropdownRef, handleClickMenu} = useDropdown();\n\n  useEffect(() => {\n    if (ref && ref.current) {\n      const positionMenu = ref.current.getBoundingClientRect();\n      if (positionMenu)\n        setDropdownMenuDimensions({\n          width: positionMenu.width,\n          height: positionMenu.height,\n        });\n    }\n  }, [showMenu]);\n\n  const content = (\n    <div\n      ref={ref}\n      className={`dropdown-menu ${showMenu ? '' : 'hidden'} ${className || ''}`}\n      style={position}\n      onClick={handleClickMenu}\n      {...rest}\n    >\n      {children}\n    </div>\n  );\n  if (dropdownRef && dropdownRef.current) {\n    const root = document.getElementById('root');\n    return ReactDOM.createPortal(content, dropdownRef.current || root || document.body);\n  }\n  return null;\n};\n\nexport default DropdownMenu;\n","import React, {useContext, useEffect, useMemo, useRef, useState} from 'react';\n\nexport {default as DropdownButton} from './dropdownButton';\nexport {default as DropdownMenu} from './dropdownMenu';\nconst DropdownContext = React.createContext({});\ntype DropdownPosition = 'top' | 'bottom' | 'right' | 'left';\ninterface DropdownProps {\n  className?: string;\n  onChangeToggleMenu?: (state: boolean) => void;\n  itemsDivider?: boolean;\n  forceRefresh?: number;\n  defaultShow?: boolean;\n  keepShown?: boolean;\n  placement?: DropdownPosition;\n  [others: string]: any;\n}\n\ninterface IDropdownContext {\n  showMenu: boolean;\n  setDropdownMenuDimensions: (dimensions: {width: number; height: number}) => void;\n  setDropdownButtonDimensions: (dimensions: {width: number; height: number}) => void;\n  handleClickMenu: (e: React.MouseEvent<HTMLDivElement>) => void;\n  position: {left: string; top: string};\n  itemsDivider: boolean;\n  dropdownRef: React.RefObject<HTMLDivElement>;\n  onToggleMenu: () => void;\n}\n\nconst Dropdown: React.FC<DropdownProps> = ({\n  children,\n  className,\n  onChangeToggleMenu,\n  itemsDivider,\n  forceRefresh,\n  defaultShow,\n  keepShown = false,\n  placement = 'bottom',\n  ...rest\n}) => {\n  const [showMenu, setShowMenu] = useState(false);\n  const [refresh, setRefresh] = useState(forceRefresh ? forceRefresh : 0);\n  const [dropdownMenuDim, setDropdownMenuDim] = useState({width: 0, height: 0});\n  const [dropdownButtonDim, setDropdownButtonDim] = useState({width: 0, height: 0});\n\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (defaultShow !== undefined && defaultShow !== showMenu) {\n      setShowMenu(defaultShow as boolean);\n    }\n  }, [defaultShow]);\n\n  useEffect(() => {\n    if (forceRefresh && refresh !== forceRefresh) setRefresh(forceRefresh);\n  }, [forceRefresh, refresh]);\n\n  const onToggleMenu = () => {\n    setShowMenu((prev) => {\n      if (typeof onChangeToggleMenu === 'function') onChangeToggleMenu(!prev);\n      return !prev;\n    });\n  };\n\n  const handleClickOutside = (event: MouseEvent) => {\n    if (event && event.target) {\n      if (\n        dropdownRef &&\n        dropdownRef.current &&\n        dropdownRef.current.getAttribute('data-show') === 'true' &&\n        !dropdownRef.current.contains(event.target as Node)\n      ) {\n        setShowMenu(false);\n        if (typeof onChangeToggleMenu === 'function') onChangeToggleMenu(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    document.addEventListener('scroll', () => setRefresh((prev) => prev++));\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n      document.removeEventListener('scroll', () => setRefresh((prev) => prev++));\n    };\n  }, []);\n\n  const topStr = (top: number, menuHeight: number) => `calc(${top}px - ${menuHeight}px - var(--unit))`;\n  const bottomStr = (top: number, buttonHeight: number) => `calc(${top}px + ${buttonHeight}px + var(--unit))`;\n  const rightStr = (left: number, buttonWidth: number) => `calc(${left}px + ${buttonWidth}px + var(--unit))`;\n  const leftStr = (left: number, menuWidth: number) => `calc(${left}px - ${menuWidth}px - var(--unit))`;\n  const leftAlignment = (left: number) => `${left}px`;\n  const rightAlignment = (left: number, menuWidth: number, buttonWidth: number) =>\n    `calc(${left}px + ${buttonWidth}px - ${menuWidth}px)`;\n  const topAlignment = (top: number) => `${top}px`;\n  const bottomAlignment = (top: number, menuHeight: number, buttonHeight: number) =>\n    `calc(${top}px + ${buttonHeight}px - ${menuHeight}px)`;\n\n  const position = useMemo(() => {\n    let left,\n      top = '',\n      dropdownMenuWidth = 0;\n\n    if (dropdownRef && dropdownRef.current) {\n      const position = dropdownRef.current.getBoundingClientRect();\n      dropdownMenuWidth = dropdownMenuDim.width < dropdownButtonDim.width ? dropdownButtonDim.width : dropdownMenuDim.width;\n      const {clientHeight, clientWidth} = document.body;\n      switch (placement) {\n        case 'top':\n          if (position.top - dropdownMenuDim.height - 8 < 0) {\n            top = bottomStr(position.top, dropdownButtonDim.height);\n          } else {\n            top = topStr(position.top, dropdownMenuDim.height);\n          }\n          if (position.left + dropdownMenuWidth > clientWidth) {\n            left = rightAlignment(position.left, dropdownMenuWidth, dropdownButtonDim.width);\n          } else {\n            left = leftAlignment(position.left);\n          }\n          break;\n        case 'right':\n          if (position.left + dropdownMenuWidth + 8 > clientWidth) {\n            left = leftStr(position.left, dropdownMenuWidth);\n          } else {\n            left = rightStr(position.left, dropdownButtonDim.width);\n          }\n          if (position.top + dropdownMenuDim.height > clientHeight) {\n            top = bottomAlignment(position.top, dropdownMenuDim.height, dropdownButtonDim.height);\n          } else {\n            top = topAlignment(position.top);\n          }\n          break;\n        case 'bottom':\n          if (position.top + dropdownMenuDim.height + 8 > clientHeight) {\n            top = topStr(position.top, dropdownMenuDim.height);\n          } else {\n            top = bottomStr(position.top, dropdownButtonDim.height);\n          }\n          if (position.left + dropdownMenuWidth > clientWidth) {\n            left = rightAlignment(position.left, dropdownMenuWidth, dropdownButtonDim.width);\n          } else {\n            left = leftAlignment(position.left);\n          }\n          break;\n        case 'left':\n          if (position.left - dropdownMenuWidth - 8 < 0) {\n            left = rightStr(position.left, dropdownButtonDim.width);\n          } else {\n            left = leftStr(position.left, dropdownMenuWidth);\n          }\n          if (position.top + dropdownMenuDim.height > clientHeight) {\n            top = bottomAlignment(position.top, dropdownMenuDim.height, dropdownButtonDim.height);\n          } else {\n            top = topAlignment(position.top);\n          }\n          break;\n      }\n    }\n    return {left, top, width: `${dropdownMenuWidth}px`};\n  }, [dropdownMenuDim, dropdownButtonDim]);\n\n  const handleClickMenu = () => {\n    if (!keepShown) {\n      setShowMenu(false);\n      if (typeof onChangeToggleMenu === 'function') onChangeToggleMenu(false);\n    }\n  };\n\n  return (\n    <DropdownContext.Provider\n      value={{\n        showMenu,\n        setDropdownMenuDimensions: setDropdownMenuDim,\n        setDropdownButtonDimensions: setDropdownButtonDim,\n        handleClickMenu,\n        itemsDivider,\n        dropdownRef,\n        onChangeToggleMenu,\n        onToggleMenu,\n        position,\n      }}\n    >\n      <div ref={dropdownRef} className={`dropdown ${className || ''}`} data-show={showMenu} {...rest}>\n        {children}\n      </div>\n    </DropdownContext.Provider>\n  );\n};\n\nexport default Dropdown;\n/**\n *\n * @internal\n */\nexport const useDropdown = () => useContext(DropdownContext) as IDropdownContext;\n","import React from 'react';\nimport BreadcrumbItem from './breadcrumbItem';\nimport Dropdown, {DropdownButton, DropdownMenu} from '../dropdown/dropdown';\n\nexport {default as BreadcrumbItem} from './breadcrumbItem';\nexport interface IBreadcrumbProps {\n  id?: string;\n  className?: string;\n  [others: string]: any;\n}\n\nconst Breadcrumb: React.FC<IBreadcrumbProps> = (props) => {\n  const {id, className, children, ...rest} = props;\n\n  const renderDropdown = (menu: any) => {\n    return (\n      <Dropdown key={menu} data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-dropdown` : undefined}>\n        <DropdownButton className=\"breadcrumb-dots\">\n          <span className=\"material-icons\">more_horiz</span>\n        </DropdownButton>\n        <DropdownMenu>{menu}</DropdownMenu>\n      </Dropdown>\n    );\n  };\n\n  const renderList = () => {\n    const breadcrumbItemSeparator = (key: number | string) => (\n      <span key={key + 'item-separator'} className=\"breadcrumb-item-separator\" />\n    );\n    const _breadcrumbItems: any = [];\n    const _dropdownMenu: any = [];\n\n    let _content: any = [];\n\n    if (children) {\n      const _children = React.Children.toArray(children);\n      if (_children.length > 1) {\n        if (_children.length > 4) {\n          _children.forEach((_child: any, index: number) => {\n            if (index > 0 && index < _children.length - 1) {\n              _dropdownMenu.push(\n                React.cloneElement(_child, {\n                  ..._child.props,\n                  className: 'dropdown-item',\n                })\n              );\n            } else {\n              _breadcrumbItems.push(\n                React.cloneElement(_child, {\n                  ..._child.props,\n                  className: index === _children.length - 1 ? 'breadcrumb-item_active' : 'breadcrumb-item',\n                })\n              );\n            }\n          });\n          _content = [_breadcrumbItems[0], renderDropdown(_dropdownMenu), _breadcrumbItems[1]];\n        } else {\n          _content = _children.map((_childMap: any, index: number) =>\n            React.cloneElement(_childMap, {\n              ..._childMap.props,\n              className: index === _children.length - 1 ? 'breadcrumb-item_active' : 'breadcrumb-item',\n            })\n          );\n        }\n      } else {\n        if ((_children[0] as any).type === BreadcrumbItem) {\n          const _uniqueChild = React.cloneElement(_children[0] as any, {\n            ...(_children[0] as any).props,\n            className: 'breadcrumb-item_active',\n          });\n          _content = [_uniqueChild];\n        }\n      }\n    }\n\n    return (\n      <div id={id} className={`breadcrumb-container ${className || ''}`} {...rest}>\n        {_content.map((_breadcrumbItem: any, _i: number) => {\n          if (_i < _content.length - 1) return [_breadcrumbItem, breadcrumbItemSeparator(_i)];\n          return _breadcrumbItem;\n        })}\n      </div>\n    );\n  };\n\n  return renderList();\n};\n\nexport default Breadcrumb;\n"],"names":["BreadcrumbItem","props","id","title","href","rest","_jsx","target","undefined","className","children","length","substring","DropdownButton$1","React","memo","_a","disabled","__rest","_b","useDropdown","onToggleMenu","setDropdownButtonDimensions","showMenu","dropdownButtonRef","useRef","useEffect","current","positionButton","getBoundingClientRect","width","height","__assign","concat","onClick","ref","DropdownMenu","setDropdownMenuDimensions","position","dropdownRef","handleClickMenu","positionMenu","content","jsx","style","root","document","getElementById","ReactDOM","createPortal","body","DropdownContext","createContext","Dropdown","onChangeToggleMenu","itemsDivider","forceRefresh","defaultShow","keepShown","_c","placement","_d","__read","useState","setShowMenu","_e","refresh","setRefresh","_f","dropdownMenuDim","setDropdownMenuDim","_g","dropdownButtonDim","setDropdownButtonDim","handleClickOutside","event","getAttribute","contains","addEventListener","prev","removeEventListener","topStr","top","menuHeight","bottomStr","buttonHeight","rightStr","left","buttonWidth","leftStr","menuWidth","leftAlignment","rightAlignment","topAlignment","bottomAlignment","useMemo","dropdownMenuWidth","position_1","clientHeight","clientWidth","Provider","value","useContext","menu","_breadcrumbItems","_dropdownMenu","_content","_children_1","Children","toArray","forEach","_child","index","push","cloneElement","_jsxs","DropdownButton","map","_childMap","type","_uniqueChild","_breadcrumbItem","_i","key","renderList"],"mappings":"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"}
{"version":3,"file":"index.esm.js","sources":["../../src/components/card/cardTop.tsx","../../src/components/card/cardImage.tsx","../../src/components/card/cardHeader.tsx","../../src/components/card/cardBody.tsx","../../src/components/locationMapCard/locationMapCard.tsx"],"sourcesContent":["import React from 'react';\n\nexport interface ICardTopProps {\n  /**\n   * Identifies the accordion item\n   */\n  id?: string;\n  /**\n   * Add class to accordion\n   */\n  className?: string;\n  [others: string]: any;\n}\n\nconst CardTop: React.FC<ICardTopProps> = (props) => {\n  const {id, children, className, ...rest} = props;\n\n  return (\n    <div id={id || ''} className={`card-top ${className || ''}`} {...rest}>\n      {children}\n    </div>\n  );\n};\n\nexport default CardTop;\n","import React from 'react';\n\nexport interface ICardImgProps {\n  /**\n   * Identifies the accordion item\n   */\n  id?: string;\n  /**\n   * Add class to accordion\n   */\n  className?: string;\n  [others: string]: any;\n}\n\nconst CardImg: React.FC<ICardImgProps> = (props) => {\n  const {id, children, className, ...rest} = props;\n  const {hoverButton, ...restAux} = rest;\n  return (\n    <div id={id || ''} key={id || 'card-img'} className={`card-img ${className || ''}`} {...restAux}>\n      {children}\n      {hoverButton}\n    </div>\n  );\n};\n\nexport default CardImg;\n","import React from 'react';\n\nexport interface ICardHeaderProps {\n  /**\n   * Identifies the accordion item\n   */\n  id?: string;\n  /**\n   * Add class to accordion\n   */\n  className?: string;\n  [others: string]: any;\n}\n\nconst CardHeader: React.FC<ICardHeaderProps> = (props) => {\n  const {id, children, className, ...rest} = props;\n\n  return (\n    <div id={id || ''} className={`card-header ${className || ''}`} {...rest}>\n      {children}\n    </div>\n  );\n};\n\nexport default CardHeader;\n","import React from 'react';\n\nexport interface ICardBodyProps {\n  /**\n   * Identifies the accordion item\n   */\n  id?: string;\n  /**\n   * Add class to accordion\n   */\n  className?: string;\n  [others: string]: any;\n}\n\nconst CardBody: React.FC<ICardBodyProps> = (props) => {\n  const {id, children, className, ...rest} = props;\n\n  return (\n    <div id={id || ''} className={`card-body ${className || ''}`} {...rest}>\n      {children}\n    </div>\n  );\n};\n\nexport default CardBody;\n","import React from 'react';\n\nimport LocationMapCardTop from '../card/cardTop';\nimport LocationMapCardMap from '../card/cardImage';\nimport LocationMapCardHeader from '../card/cardHeader';\nimport LocationMapCardBody from '../card/cardBody';\n\nexport {default as LocationMapCardTop} from '../card/cardTop';\nexport {default as LocationMapCardMap} from '../card/cardImage';\nexport {default as LocationMapCardHeader} from '../card/cardHeader';\nexport {default as LocationMapCardBody} from '../card/cardBody';\n\nexport interface ILocationMapCardProps {\n  /**\n   * Identifies the card\n   */\n  id?: string;\n  /**\n   * Add class to card\n   */\n  className?: string;\n  /**\n   * Set selected style in card\n   */\n  selected?: boolean;\n  /**\n   * onClick function\n   */\n  onClick?: () => void;\n  /**\n   * Parts of card, one of this is required\n   */\n  children:\n    | React.ReactElement<\n        typeof LocationMapCardTop | typeof LocationMapCardMap | typeof LocationMapCardHeader | typeof LocationMapCardBody\n      >[]\n    | React.ReactElement<\n        typeof LocationMapCardTop | typeof LocationMapCardMap | typeof LocationMapCardHeader | typeof LocationMapCardBody\n      >;\n  [others: string]: any;\n}\n\nconst LocationMapCard: React.FC<ILocationMapCardProps> = (props) => {\n  const {id, children, className, selected, onClick, ...rest} = props;\n\n  const renderLocationMapCard = () => {\n    let cardMap: any;\n    let cardTop: any;\n    const contentChildrens: any[] = [];\n    if (children) {\n      React.Children.forEach(children, (_childItem: any) => {\n        if (_childItem)\n          if (_childItem.type === LocationMapCardHeader || _childItem.type === LocationMapCardBody)\n            contentChildrens.push(_childItem);\n          else if (_childItem.type === LocationMapCardMap) cardMap = _childItem;\n          else if (_childItem.type === LocationMapCardTop) cardTop = _childItem;\n      });\n      if (cardMap && cardTop) {\n        let _cardMapChild = [];\n        if (cardMap.props && cardMap.props.children) _cardMapChild = cardMap.props.children;\n        cardMap = React.cloneElement(cardMap, {\n          ...cardMap.props,\n          children: [].concat(cardTop, _cardMapChild),\n        });\n      }\n    }\n\n    return (\n      <div id={id || ''} className={`card_map${selected ? '_selected' : ''} ${className || ''}`} onClick={onClick} {...rest}>\n        {cardMap}\n        {contentChildrens}\n      </div>\n    );\n  };\n  return renderLocationMapCard();\n};\n\nexport default LocationMapCard;\n"],"names":["CardTop","props","id","children","className","rest","_jsx","CardImg","hoverButton","restAux","__rest","_jsxs","__assign","concat","CardHeader","CardBody","LocationMapCard","selected","onClick","cardMap","cardTop","contentChildrens","React","Children","forEach","_childItem","type","LocationMapCardHeader","LocationMapCardBody","push","LocationMapCardMap","LocationMapCardTop","_cardMapChild","cloneElement","renderLocationMapCard"],"mappings":"smBAcM,IAAAA,EAAmC,SAACC,GACjC,IAAAC,EAAoCD,EAAKC,GAArCC,EAAgCF,EAAxBE,SAAEC,EAAsBH,YAARI,IAAQJ,EAArC,CAAkC,KAAA,WAAA,cAExC,OACEK,WAAKJ,GAAIA,GAAM,GAAIE,UAAW,mBAAYA,GAAa,KAAUC,EAC9D,CAAAF,SAAAA,IAGP,ECRMI,EAAmC,SAACN,GACjC,IAAAC,EAAoCD,EAAKC,GAArCC,EAAgCF,EAAxBE,SAAEC,EAAsBH,YAARI,IAAQJ,EAArC,CAAkC,KAAA,WAAA,cACjCO,EAA2BH,EAAhBG,YAAKC,EAAOC,EAAIL,EAA5B,CAAyB,gBAC/B,OACEM,EAAK,MAAAC,EAAA,CAAAV,GAAIA,GAAM,GAA2BE,UAAW,YAAAS,OAAYT,GAAa,KAAUK,EACrF,CAAAN,SAAA,CAAAA,EACAK,KAFqBN,GAAM,WAKlC,ECTMY,EAAyC,SAACb,GACvC,IAAAC,EAAoCD,EAAKC,GAArCC,EAAgCF,EAAxBE,SAAEC,EAAsBH,YAARI,IAAQJ,EAArC,CAAkC,KAAA,WAAA,cAExC,OACEK,WAAKJ,GAAIA,GAAM,GAAIE,UAAW,sBAAeA,GAAa,KAAUC,EACjE,CAAAF,SAAAA,IAGP,ECRMY,EAAqC,SAACd,GACnC,IAAAC,EAAoCD,EAAKC,GAArCC,EAAgCF,EAAxBE,SAAEC,EAAsBH,YAARI,IAAQJ,EAArC,CAAkC,KAAA,WAAA,cAExC,OACEK,WAAKJ,GAAIA,GAAM,GAAIE,UAAW,oBAAaA,GAAa,KAAUC,EAC/D,CAAAF,SAAAA,IAGP,ECoBMa,EAAmD,SAACf,GACjD,IAAAC,EAAuDD,EAAKC,GAAxDC,EAAmDF,EAA3CE,SAAEC,EAAyCH,EAAhCG,UAAEa,EAA8BhB,EAAKgB,SAAzBC,EAAoBjB,EAAKiB,QAAbb,EAAQK,EAAAT,EAAxD,CAAA,KAAA,WAAA,YAAA,WAAA,YA+BN,OA7B8B,WAC5B,IAAIkB,EACAC,EACEC,EAA0B,GAChC,GAAIlB,IACFmB,EAAMC,SAASC,QAAQrB,GAAU,SAACsB,GAC5BA,IACEA,EAAWC,OAASC,GAAyBF,EAAWC,OAASE,EACnEP,EAAiBQ,KAAKJ,GACfA,EAAWC,OAASI,EAAoBX,EAAUM,EAClDA,EAAWC,OAASK,IAAoBX,EAAUK,GAC/D,IACIN,GAAWC,GAAS,CACtB,IAAIY,EAAgB,GAChBb,EAAQlB,OAASkB,EAAQlB,MAAME,WAAU6B,EAAgBb,EAAQlB,MAAME,UAC3EgB,EAAUG,EAAMW,aAAad,EAAOP,EAAAA,EAAA,CAAA,EAC/BO,EAAQlB,OAAK,CAChBE,SAAU,GAAGU,OAAOO,EAASY,KAEhC,CAGH,OACErB,EAAK,MAAAC,EAAA,CAAAV,GAAIA,GAAM,GAAIE,UAAW,kBAAWa,EAAW,YAAc,eAAMb,GAAa,IAAMc,QAASA,GAAab,EAC9G,CAAAF,SAAA,CAAAgB,EACAE,KAGP,CACOa,EACT"}
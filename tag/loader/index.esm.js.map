{"version":3,"file":"index.esm.js","sources":["../../src/components/loader/loaderCircular.tsx","../../src/components/loader/loaderOval.tsx","../../src/components/loader/loader.tsx"],"sourcesContent":["import React, {useRef, useEffect} from 'react';\nconst OFFSET_DEFAULT = 213;\n\ninterface ILoaderCircularProps {\n  percentage: number;\n  HasText: any;\n  error?: boolean;\n  success?: boolean;\n  className?: string;\n  [others: string]: any;\n}\n\nexport const LoaderCircular: React.FC<ILoaderCircularProps> = ({\n  percentage,\n  HasText,\n  error,\n  success,\n  className,\n  ...rest\n}) => {\n  const calcPercentage = (x: number) => (x / 100) * 87;\n  const ref = useRef<SVGPathElement>(null);\n  const divRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.style.animationDelay = '0';\n      ref.current.style.transition = 'stroke-dashoffset 0.2s linear';\n      ref.current.style.strokeDashoffset = `${calcPercentage(100 - percentage) + OFFSET_DEFAULT}`;\n\n      if (percentage === 100) {\n        if (divRef.current && ref.current) {\n          if (error) divRef.current.classList.add('error');\n          else if (success) divRef.current.classList.add('success');\n        }\n      }\n    }\n  }, [percentage, error, success]);\n\n  const getLoaderState = () => {\n    if (error) return 'error';\n    if (success) return 'success';\n    return '';\n  };\n\n  return (\n    <div\n      className={`loader-wrapper ${className || ''}`}\n      data-testid={rest && rest['data-testid'] ? rest['data-testid'] : undefined}\n    >\n      <div\n        ref={divRef}\n        className={`svg-container_circular ${getLoaderState()}`}\n        data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-svg-container` : undefined}\n      >\n        <svg\n          className=\"svg-content\"\n          width=\"32\"\n          height=\"32\"\n          viewBox=\"0 0 32 32\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            className=\"circle-svg\"\n            ref={ref}\n            d=\"M16 30C8.26801 30 2 23.732 2 16C2 8.26801 8.26801 2 16 2C23.732 2 30 8.26801 30 16C30 23.732 23.732 30 16 30Z\"\n            stroke=\"rgb(0, 154, 204)\"\n            strokeWidth=\"4\"\n          />\n        </svg>\n      </div>\n      {HasText}\n    </div>\n  );\n};\n","import React, {useEffect, useRef} from 'react';\nconst OFFSET_DEFAULT = 165;\n\ninterface ILoaderProps {\n  percentage: number;\n  HasText: any;\n  error?: boolean;\n  success?: boolean;\n  className?: string;\n  [others: string]: any;\n}\n\nexport const LoaderOval: React.FC<ILoaderProps> = ({percentage, HasText, error, success, className, ...rest}) => {\n  const ref = useRef<SVGPathElement>(null);\n  const divRef = useRef<HTMLDivElement>(null);\n  const calcPercentage = (x: number) => (x / 100) * 135;\n\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.style.animationDelay = '0';\n      ref.current.style.transition = 'stroke-dashoffset 0.2s linear';\n      ref.current.style.strokeDashoffset = `${calcPercentage(100 - percentage) + OFFSET_DEFAULT}`;\n\n      if (percentage === 100) {\n        if (divRef.current && ref.current) {\n          if (error) divRef.current.classList.add('error');\n          else if (success) divRef.current.classList.add('success');\n        }\n      }\n    }\n  }, [percentage, error, success]);\n\n  const getLoaderState = () => {\n    if (percentage !== 100) {\n      if (error) return 'error';\n      if (success) return 'success';\n    }\n    return '';\n  };\n\n  return (\n    <div\n      className={`loader-wrapper ${className || ''}`}\n      data-testid={rest && rest['data-testid'] ? rest['data-testid'] : undefined}\n    >\n      <div\n        className={`svg-container ${getLoaderState()}`}\n        data-percentage={`${percentage}%`}\n        ref={divRef}\n        data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-svg-container` : undefined}\n      >\n        <svg\n          className=\"svg-content\"\n          width={divRef && divRef.current && divRef.current.style.width === '24px' ? '32' : '56'}\n          height=\"32\"\n          viewBox={divRef && divRef.current && divRef.current.style.width === '24px' ? '0 0 32 32' : '0 0 56 32'}\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            className=\"oval-svg\"\n            ref={ref}\n            d=\"M28 2H40C47.732 2 54 8.26801 54 16C54 23.732 47.732 30 40\n            30H28H16C8.26801 30 2 23.732 2 16C2 8.26801 8.26801 2 16 2H28Z\"\n            stroke=\"rgb(0, 154, 204)\"\n            strokeWidth=\"4\"\n            strokeLinecap=\"round\"\n          />\n        </svg>\n      </div>\n      {HasText}\n    </div>\n  );\n};\n","import React, {useEffect, useState} from 'react';\nimport {LoaderCircular} from './loaderCircular';\nimport {LoaderOval} from './loaderOval';\n\nexport interface ILoaderProps {\n  /**\n   * Apply different styles for Loader\n   */\n  className?: string;\n  /**\n   * Tells Loader that is in error state\n   */\n  error?: boolean;\n  /**\n   * Tells Loader that is in error state\n   */\n  success?: boolean;\n  /**\n   * Gives the Title text if needed\n   */\n  title?: string;\n  /**\n   * Gives the subtitle text if needed\n   */\n  subtitle?: string;\n  /**\n   * Set in case to need a  small loader\n   */\n  spinner?: boolean;\n  percentage?: {\n    show: boolean;\n    value?: number;\n  };\n  automatic?: boolean;\n  [others: string]: any;\n}\n\nconst Loader: React.FC<ILoaderProps> = ({\n  title,\n  subtitle,\n  spinner,\n  percentage = {value: 0, show: false},\n  error,\n  success,\n  automatic,\n  className,\n  ...rest\n}) => {\n  const [auxPercentage, setAuxPercentage] = useState<number | null>(automatic ? 0 : null);\n\n  useEffect(() => {\n    let interval: any;\n    if (automatic) {\n      interval = setInterval(() => {\n        setAuxPercentage((prev) => ((prev as number) < 100 ? (prev as number) + 5 : prev));\n      }, 250);\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  });\n\n  const HasText = () => {\n    if (title) {\n      return (\n        <div className=\"loader-text-wrapper\">\n          <span\n            className=\"loader-title\"\n            data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-title` : undefined}\n          >\n            {title}\n          </span>\n          {subtitle && (\n            <span\n              className=\"loader-subtitle\"\n              data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-subtitle` : undefined}\n            >\n              {subtitle}\n            </span>\n          )}\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const renderLoader = () => {\n    if (spinner) {\n      if (title) {\n        return (\n          <div\n            className={`loader-wrapper ${className || ''}`}\n            data-testid={rest && rest['data-testid'] ? rest['data-testid'] : undefined}\n          >\n            <div\n              className=\"spinner\"\n              data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-spinner` : undefined}\n            />\n            <HasText />\n          </div>\n        );\n      }\n      return (\n        <div\n          className={`spinner ${className || ''}`}\n          data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-spinner` : undefined}\n        />\n      );\n    } else if (!percentage.show) {\n      return (\n        <LoaderCircular\n          className={className}\n          percentage={automatic ? (auxPercentage as number) : (percentage.value as number)}\n          HasText={<HasText />}\n          error={automatic ? (auxPercentage as number) >= 95 && error : error}\n          success={automatic ? (auxPercentage as number) >= 95 && success : success}\n          data-testid={rest && rest['data-testid'] ? rest['data-testid'] : null}\n        />\n      );\n    }\n    return (\n      <LoaderOval\n        className={className}\n        percentage={automatic ? (auxPercentage as number) : (percentage.value as number)}\n        HasText={<HasText />}\n        error={automatic ? (auxPercentage as number) >= 95 && error : error}\n        success={automatic ? (auxPercentage as number) >= 95 && success : success}\n        data-testid={rest && rest['data-testid'] ? rest['data-testid'] : null}\n      />\n    );\n  };\n  return renderLoader();\n};\n\nexport default Loader;\n"],"names":["LoaderCircular","_a","percentage","HasText","error","success","className","rest","__rest","ref","useRef","divRef","useEffect","current","style","animationDelay","transition","strokeDashoffset","concat","classList","add","_jsxs","__assign","undefined","_jsx","children","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","LoaderOval","getLoaderState","strokeLinecap","Loader","title","subtitle","spinner","_b","value","show","automatic","_c","__read","useState","auxPercentage","setAuxPercentage","interval","setInterval","prev","clearInterval"],"mappings":"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"}
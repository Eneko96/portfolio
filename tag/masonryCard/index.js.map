{"version":3,"file":"index.js","sources":["../../src/components/card/cardTop.tsx","../../src/components/card/cardImage.tsx","../../src/components/card/cardHeader.tsx","../../src/components/card/cardBody.tsx","../../src/components/masonryCard/masonryCard.tsx"],"sourcesContent":["import React from 'react';\n\nexport interface ICardTopProps {\n  /**\n   * Identifies the accordion item\n   */\n  id?: string;\n  /**\n   * Add class to accordion\n   */\n  className?: string;\n  [others: string]: any;\n}\n\nconst CardTop: React.FC<ICardTopProps> = (props) => {\n  const {id, children, className, ...rest} = props;\n\n  return (\n    <div id={id || ''} className={`card-top ${className || ''}`} {...rest}>\n      {children}\n    </div>\n  );\n};\n\nexport default CardTop;\n","import React from 'react';\n\nexport interface ICardImgProps {\n  /**\n   * Identifies the accordion item\n   */\n  id?: string;\n  /**\n   * Add class to accordion\n   */\n  className?: string;\n  [others: string]: any;\n}\n\nconst CardImg: React.FC<ICardImgProps> = (props) => {\n  const {id, children, className, ...rest} = props;\n  const {hoverButton, ...restAux} = rest;\n  return (\n    <div id={id || ''} key={id || 'card-img'} className={`card-img ${className || ''}`} {...restAux}>\n      {children}\n      {hoverButton}\n    </div>\n  );\n};\n\nexport default CardImg;\n","import React from 'react';\n\nexport interface ICardHeaderProps {\n  /**\n   * Identifies the accordion item\n   */\n  id?: string;\n  /**\n   * Add class to accordion\n   */\n  className?: string;\n  [others: string]: any;\n}\n\nconst CardHeader: React.FC<ICardHeaderProps> = (props) => {\n  const {id, children, className, ...rest} = props;\n\n  return (\n    <div id={id || ''} className={`card-header ${className || ''}`} {...rest}>\n      {children}\n    </div>\n  );\n};\n\nexport default CardHeader;\n","import React from 'react';\n\nexport interface ICardBodyProps {\n  /**\n   * Identifies the accordion item\n   */\n  id?: string;\n  /**\n   * Add class to accordion\n   */\n  className?: string;\n  [others: string]: any;\n}\n\nconst CardBody: React.FC<ICardBodyProps> = (props) => {\n  const {id, children, className, ...rest} = props;\n\n  return (\n    <div id={id || ''} className={`card-body ${className || ''}`} {...rest}>\n      {children}\n    </div>\n  );\n};\n\nexport default CardBody;\n","import React from 'react';\n\nimport MasonryCardTop from '../card/cardTop';\nimport MasonryCardImg from '../card/cardImage';\nimport MasonryCardHeader from '../card/cardHeader';\nimport MasonryCardBody from '../card/cardBody';\n\nexport {default as MasonryCardTop} from '../card/cardTop';\nexport {default as MasonryCardImg} from '../card/cardImage';\nexport {default as MasonryCardHeader} from '../card/cardHeader';\nexport {default as MasonryCardBody} from '../card/cardBody';\n\nexport interface IMasonryCardProps {\n  /**\n   * Identifies the card\n   */\n  id?: string;\n  /**\n   * Add class to card\n   */\n  className?: string;\n  /**\n   * Set the selected style in card\n   */\n  selected?: boolean;\n  /**\n   * Set horizontal variant\n   */\n  horizontal?: boolean;\n  /**\n   * Set accent variant\n   */\n  accent?: boolean;\n  /**\n   * onClick function in card\n   */\n  onClick?: () => void;\n  /**\n   * Parts of card, one of this is required\n   */\n  children:\n    | React.ReactElement<typeof MasonryCardTop | typeof MasonryCardImg | typeof MasonryCardHeader | typeof MasonryCardBody>[]\n    | React.ReactElement<typeof MasonryCardTop | typeof MasonryCardImg | typeof MasonryCardHeader | typeof MasonryCardBody>;\n  [others: string]: any;\n}\n\nconst MasonryCard: React.FC<IMasonryCardProps> = (props) => {\n  const {id, children, className, accent, horizontal, selected, onClick, ...rest} = props;\n  const renderMasonryCard = () => {\n    let cardImg: any;\n    const contentChildrens: any[] = [];\n    if (children) {\n      React.Children.forEach(children, (_childItem: any) => {\n        if (_childItem)\n          if (\n            _childItem.type === MasonryCardTop ||\n            _childItem.type === MasonryCardHeader ||\n            _childItem.type === MasonryCardBody\n          )\n            contentChildrens.push(_childItem);\n          else if (_childItem.type === MasonryCardImg) cardImg = _childItem;\n      });\n    }\n    if (!cardImg || accent) {\n      cardImg = <div className=\"card-img bgAccent\"></div>;\n    }\n    return (\n      <div\n        id={id || ''}\n        className={`card_masonry${horizontal ? '_horizontal' : ''}${selected ? '_selected' : ''} ${className || ''}`}\n        onClick={onClick}\n        {...rest}\n      >\n        {cardImg}\n        <div className=\"card_masonry-content\">{contentChildrens}</div>\n      </div>\n    );\n  };\n  return renderMasonryCard();\n};\n\nexport default MasonryCard;\n"],"names":["CardTop","props","id","children","className","rest","_jsx","CardImg","hoverButton","restAux","__rest","_jsxs","jsxs","__assign","concat","CardHeader","CardBody","cardImg","contentChildrens","accent","horizontal","selected","onClick","React","Children","forEach","_childItem","type","MasonryCardTop","MasonryCardHeader","MasonryCardBody","push","MasonryCardImg","jsx"],"mappings":"ouBAcM,IAAAA,EAAmC,SAACC,GACjC,IAAAC,EAAoCD,EAAKC,GAArCC,EAAgCF,EAAxBE,SAAEC,EAAsBH,YAARI,IAAQJ,EAArC,CAAkC,KAAA,WAAA,cAExC,OACEK,EAAAA,aAAKJ,GAAIA,GAAM,GAAIE,UAAW,mBAAYA,GAAa,KAAUC,EAC9D,CAAAF,SAAAA,IAGP,ECRMI,EAAmC,SAACN,GACjC,IAAAC,EAAoCD,EAAKC,GAArCC,EAAgCF,EAAxBE,SAAEC,EAAsBH,YAARI,IAAQJ,EAArC,CAAkC,KAAA,WAAA,cACjCO,EAA2BH,EAAhBG,YAAKC,EAAOC,EAAIL,EAA5B,CAAyB,gBAC/B,OACEM,EAAKC,KAAA,MAAAC,EAAA,CAAAX,GAAIA,GAAM,GAA2BE,UAAW,YAAAU,OAAYV,GAAa,KAAUK,EACrF,CAAAN,SAAA,CAAAA,EACAK,KAFqBN,GAAM,WAKlC,ECTMa,EAAyC,SAACd,GACvC,IAAAC,EAAoCD,EAAKC,GAArCC,EAAgCF,EAAxBE,SAAEC,EAAsBH,YAARI,IAAQJ,EAArC,CAAkC,KAAA,WAAA,cAExC,OACEK,EAAAA,aAAKJ,GAAIA,GAAM,GAAIE,UAAW,sBAAeA,GAAa,KAAUC,EACjE,CAAAF,SAAAA,IAGP,ECRMa,EAAqC,SAACf,GACnC,IAAAC,EAAoCD,EAAKC,GAArCC,EAAgCF,EAAxBE,SAAEC,EAAsBH,YAARI,IAAQJ,EAArC,CAAkC,KAAA,WAAA,cAExC,OACEK,EAAAA,aAAKJ,GAAIA,GAAM,GAAIE,UAAW,oBAAaA,GAAa,KAAUC,EAC/D,CAAAF,SAAAA,IAGP,0HCwBiD,SAACF,GACzC,IAEDgB,EACEC,EAHDhB,EAA2ED,KAAvEE,EAAuEF,EAAKE,SAAlEC,EAA6DH,EAAKG,UAAvDe,EAAkDlB,EAA5CkB,OAAEC,EAA0CnB,EAAhCmB,WAAEC,EAA8BpB,WAApBqB,EAAoBrB,EAAKqB,QAAbjB,EAAIK,EAAIT,EAA5E,CAAA,KAAA,WAAA,YAAA,SAAA,aAAA,WAAA,YA+BN,OA5BQiB,EAA0B,GAC5Bf,GACFoB,EAAAA,QAAMC,SAASC,QAAQtB,GAAU,SAACuB,GAC5BA,IAEAA,EAAWC,OAASC,GACpBF,EAAWC,OAASE,GACpBH,EAAWC,OAASG,EAEpBZ,EAAiBa,KAAKL,GACfA,EAAWC,OAASK,IAAgBf,EAAUS,GAC3D,IAEGT,IAAWE,IACdF,EAAUX,EAAK2B,IAAA,MAAA,CAAA7B,UAAU,uBAGzBO,EACEC,KAAA,MAAAC,EAAA,CAAAX,GAAIA,GAAM,GACVE,UAAW,eAAeU,OAAAM,EAAa,cAAgB,IAAKN,OAAAO,EAAW,YAAc,GAAE,KAAAP,OAAIV,GAAa,IACxGkB,QAASA,GACLjB,EAEH,CAAAF,SAAA,CAAAc,EACDX,MAAA,MAAAO,EAAA,CAAKT,UAAU,wBAAsB,CAAAD,SAAEe,QAK/C"}
{"version":3,"file":"index.js","sources":["../../src/components/treeView/treeViewElement.tsx","../../src/components/treeView/treeView.tsx"],"sourcesContent":["import React, {useState} from 'react';\n\nexport interface ITreeElement {\n  /**\n   * Name of the Tree Element\n   */\n  name: string;\n  /**\n   * For disabling the Tree Element\n   */\n  disabled?: boolean;\n  /**\n   * click event on developers needs\n   */\n  onClick?: (e?: React.MouseEvent) => void;\n  /**\n   * Alternative className on Tree.Element\n   */\n  className?: string;\n  /**\n   * prop for displaying an icon if needed\n   */\n  icon?: string;\n  /**\n   * By default left sided arrow, can be passed an oposite side (both will show up if they have children)\n   */\n  arrow?: 'left' | 'right' | 'none';\n  [others: string]: any;\n}\n\nconst TreeViewElement: React.FC<ITreeElement> = ({\n  children,\n  name,\n  onClick,\n  disabled,\n  className,\n  arrow = 'left',\n  icon,\n  ...rest\n}) => {\n  const [showChildren, setShowChildren] = useState<boolean>(false);\n\n  const handleClickElement = (e: React.MouseEvent) => {\n    setShowChildren(!showChildren);\n    if (typeof onClick === 'function') onClick(e);\n  };\n\n  const renderIcon = () => {\n    if (icon) return icon;\n    if (!icon && arrow === 'left') return 'arrow_right';\n    return '';\n  };\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        disabled={disabled}\n        className={`list-icon tree-element ${className || ''}`}\n        onClick={handleClickElement}\n        {...rest}\n      >\n        <li className=\"item-condensed tree-li\">\n          {children || icon ? (\n            <span className=\"material-icons icon-order\">{renderIcon()}</span>\n          ) : (\n            <span className=\"icon-order\" />\n          )}\n          {name}\n          {arrow === 'right' &&\n            children &&\n            (showChildren ? (\n              <span className=\"material-icons tree-element-icon-right\">keyboard_arrow_up</span>\n            ) : (\n              <span className=\"material-icons tree-element-icon-right\">keyboard_arrow_down</span>\n            ))}\n        </li>\n      </button>\n      {children &&\n        showChildren &&\n        React.Children.toArray(children).map((_child, _idx) => (\n          <div key={_idx} className=\"tree-element-item\">\n            {_child}\n          </div>\n        ))}\n    </>\n  );\n};\n\nexport default TreeViewElement;\n","import React from 'react';\nimport TreeViewElement from './treeViewElement';\nexport {default as TreeViewElement} from './treeViewElement';\n\ninterface ITree {\n  /**\n   * Alternative className for Tree\n   */\n  className?: string;\n  [other: string]: any;\n}\n\nconst Tree: React.FC<ITree> = ({children, className, ...rest}) => {\n  const renderable = React.Children.toArray(children).every((child: any) => child.type === TreeViewElement);\n  return renderable ? (\n    <div className={`tree-container ${className || ''}`} {...rest}>\n      {children}\n    </div>\n  ) : null;\n};\n\nexport default Tree;\n"],"names":["TreeViewElement","_a","children","name","onClick","disabled","className","_b","arrow","icon","rest","__rest","_c","__read","useState","showChildren","setShowChildren","_jsxs","_Fragment","_jsx","jsx","__assign","type","concat","e","jsxs","React","Children","toArray","map","_child","_idx","every","child"],"mappings":"wuBA8BM,IAAAA,EAA0C,SAACC,GAC/C,IAAAC,EAAQD,EAAAC,SACRC,EAAIF,EAAAE,KACJC,EAAOH,EAAAG,QACPC,EAAQJ,EAAAI,SACRC,EAASL,EAAAK,UACTC,EAAAN,EAAAO,MAAAA,OAAQ,IAAAD,EAAA,OAAMA,EACdE,EAAIR,EAAAQ,KACDC,EAR4CC,EAAAV,EAAA,CAAA,WAAA,OAAA,UAAA,WAAA,YAAA,QAAA,SAUzCW,yRAAAC,CAAkCC,EAAQA,UAAU,GAAM,GAAzDC,EAAYH,EAAA,GAAEI,OAarB,OACEC,OAAAC,EAAAA,SAAA,CAAAhB,SAAA,CACEiB,EACEC,IAAA,SAAAC,EAAA,CAAAC,KAAK,SACLjB,SAAUA,EACVC,UAAW,0BAAAiB,OAA0BjB,GAAa,IAClDF,QAjBqB,SAACoB,GAC1BR,GAAiBD,GACM,mBAAZX,GAAwBA,EAAQoB,EAC7C,GAeUd,EAEJ,CAAAR,SAAAe,EAAAQ,KAAA,KAAAJ,EAAA,CAAIf,UAAU,0BAAwB,CAAAJ,SAAA,CACnCA,GAAYO,EACXU,EAAAC,IAAA,OAAAC,EAAA,CAAMf,UAAU,6BAA2B,CAAAJ,SAhB/CO,IACCA,GAAkB,SAAVD,EACN,GAD+B,kBAiB9BW,EAAMC,IAAA,OAAA,CAAAd,UAAU,eAEjBH,EACU,UAAVK,GACCN,IACCa,EACCI,gBAAMb,UAAU,0CAAwC,CAAAJ,SAAA,uBAExDiB,EAAAA,IAAM,OAAAE,EAAA,CAAAf,UAAU,0CAAmE,CAAAJ,SAAA,iCAI1FA,GACCa,GACAW,EAAAA,QAAMC,SAASC,QAAQ1B,GAAU2B,KAAI,SAACC,EAAQC,GAAS,OACrDZ,EAAAA,IAAA,MAAAE,EAAA,CAAgBf,UAAU,qBAAmB,CAAAJ,SAC1C4B,IADOC,QAMpB,4CC3E8B,SAAC9B,GAAC,IAAAC,aAAUI,cAAcI,EAAzBC,EAAAV,EAAA,CAAA,WAAA,cAE7B,OADmByB,EAAK,QAACC,SAASC,QAAQ1B,GAAU8B,OAAM,SAACC,GAAe,OAAAA,EAAMX,OAAStB,CAAe,IAEtGmB,EAAAA,IAAK,MAAAE,EAAA,CAAAf,UAAW,kBAAAiB,OAAkBjB,GAAa,KAAUI,EAAI,CAAAR,SAC1DA,KAED,IACN"}
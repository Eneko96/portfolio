{"version":3,"file":"index.esm.js","sources":["../../src/components/card/cardTop.tsx","../../src/components/card/cardImage.tsx","../../src/components/card/cardHeader.tsx","../../src/components/card/cardBody.tsx","../../src/components/card/cardFooter.tsx","../../src/components/card/cardFloatButtons.tsx","../../src/components/card/card.tsx"],"sourcesContent":["import React from 'react';\n\nexport interface ICardTopProps {\n  /**\n   * Identifies the accordion item\n   */\n  id?: string;\n  /**\n   * Add class to accordion\n   */\n  className?: string;\n  [others: string]: any;\n}\n\nconst CardTop: React.FC<ICardTopProps> = (props) => {\n  const {id, children, className, ...rest} = props;\n\n  return (\n    <div id={id || ''} className={`card-top ${className || ''}`} {...rest}>\n      {children}\n    </div>\n  );\n};\n\nexport default CardTop;\n","import React from 'react';\n\nexport interface ICardImgProps {\n  /**\n   * Identifies the accordion item\n   */\n  id?: string;\n  /**\n   * Add class to accordion\n   */\n  className?: string;\n  [others: string]: any;\n}\n\nconst CardImg: React.FC<ICardImgProps> = (props) => {\n  const {id, children, className, ...rest} = props;\n  const {hoverButton, ...restAux} = rest;\n  return (\n    <div id={id || ''} key={id || 'card-img'} className={`card-img ${className || ''}`} {...restAux}>\n      {children}\n      {hoverButton}\n    </div>\n  );\n};\n\nexport default CardImg;\n","import React from 'react';\n\nexport interface ICardHeaderProps {\n  /**\n   * Identifies the accordion item\n   */\n  id?: string;\n  /**\n   * Add class to accordion\n   */\n  className?: string;\n  [others: string]: any;\n}\n\nconst CardHeader: React.FC<ICardHeaderProps> = (props) => {\n  const {id, children, className, ...rest} = props;\n\n  return (\n    <div id={id || ''} className={`card-header ${className || ''}`} {...rest}>\n      {children}\n    </div>\n  );\n};\n\nexport default CardHeader;\n","import React from 'react';\n\nexport interface ICardBodyProps {\n  /**\n   * Identifies the accordion item\n   */\n  id?: string;\n  /**\n   * Add class to accordion\n   */\n  className?: string;\n  [others: string]: any;\n}\n\nconst CardBody: React.FC<ICardBodyProps> = (props) => {\n  const {id, children, className, ...rest} = props;\n\n  return (\n    <div id={id || ''} className={`card-body ${className || ''}`} {...rest}>\n      {children}\n    </div>\n  );\n};\n\nexport default CardBody;\n","import React from 'react';\n\nexport interface ICardFooterProps {\n  /**\n   * Identifies the accordion item\n   */\n  id?: string;\n  /**\n   * Add class to accordion\n   */\n  className?: string;\n  [others: string]: any;\n}\n\nconst CardFooter: React.FC<ICardFooterProps> = (props) => {\n  const {id, children, className, ...rest} = props;\n\n  return (\n    <div id={id || ''} className={`card-footer ${className || ''}`} {...rest}>\n      {children}\n    </div>\n  );\n};\n\nexport default CardFooter;\n","import React from 'react';\nexport interface ICardFloatButtonsProps {\n  /**\n   * Identifies the accordion item\n   */\n  id?: string;\n  /**\n   * Add class to accordion\n   */\n  className?: string;\n  [others: string]: any;\n}\n\nconst CardFloatButtons: React.FC<ICardFloatButtonsProps> = (props) => {\n  const {id, children, className, ...rest} = props;\n\n  return (\n    <div id={id || ''} className={`card-float-buttons ${className || ''}`} {...rest}>\n      {children}\n    </div>\n  );\n};\n\nexport default CardFloatButtons;\n","import React from 'react';\n\nimport CardTop from './cardTop';\nimport CardImg from './cardImage';\nimport CardHeader from './cardHeader';\nimport CardBody from './cardBody';\nimport CardFooter from './cardFooter';\nimport CardFloatButtons from './cardFloatButtons';\n\nexport {default as CardTop} from './cardTop';\nexport {default as CardImg} from './cardImage';\nexport {default as CardHeader} from './cardHeader';\nexport {default as CardBody} from './cardBody';\nexport {default as CardFooter} from './cardFooter';\nexport {default as CardFloatButtons} from './cardFloatButtons';\n\nexport interface ICardProps {\n  /**\n   * Identifies the card item\n   */\n  id?: string;\n  /**\n   * Change card type for horizontal card\n   */\n  horizontal?: boolean;\n  /**\n   * Add class to card\n   */\n  className?: string;\n  /**\n   * Set card selected\n   */\n  selected?: boolean;\n  /**\n   * onClick function\n   */\n  onClick?: () => void;\n  /**\n   * Parts of cards, one of this is required\n   */\n  children:\n    | React.ReactElement<\n        typeof CardTop | typeof CardImg | typeof CardHeader | typeof CardBody | typeof CardFooter | typeof CardFloatButtons\n      >[]\n    | React.ReactElement<\n        typeof CardTop | typeof CardImg | typeof CardHeader | typeof CardBody | typeof CardFooter | typeof CardFloatButtons\n      >;\n  [others: string]: any;\n}\n\nconst Card: React.FC<ICardProps> = (props) => {\n  const {id, horizontal, children, className, selected, onClick, ...rest} = props;\n\n  const renderCard = () => {\n    let cardImg: any;\n    let cardFloatButtons: any;\n    const contentChildrens: any[] = [];\n    if (children) {\n      React.Children.forEach(children, (_childItem: any) => {\n        if (_childItem)\n          if (\n            _childItem.type === CardTop ||\n            _childItem.type === CardHeader ||\n            _childItem.type === CardBody ||\n            _childItem.type === CardFooter\n          )\n            contentChildrens.push(_childItem);\n          else if (_childItem.type === CardImg) cardImg = _childItem;\n          else if (_childItem.type === CardFloatButtons) cardFloatButtons = _childItem;\n      });\n\n      if (cardImg && cardFloatButtons) {\n        let _cardImgChild: any = [];\n        if (cardImg.props && cardImg.props.children) _cardImgChild = cardImg.props.children;\n        cardImg = React.cloneElement(cardImg, {\n          ...cardImg.props,\n          children: [].concat(_cardImgChild, cardFloatButtons),\n        });\n      }\n    }\n    if (horizontal)\n      return (\n        <div\n          id={id || ''}\n          className={`card_horizontal${selected ? '_selected' : ''} ${className || ''}`}\n          onClick={onClick}\n          {...rest}\n        >\n          {cardImg}\n          {contentChildrens && contentChildrens.length > 0 && (\n            <div className=\"card_horizontal-content\">{contentChildrens}</div>\n          )}\n        </div>\n      );\n\n    return (\n      <div id={id || ''} className={`card${selected ? '_selected' : ''} ${className || ''}`} onClick={onClick} {...rest}>\n        {cardImg}\n        {contentChildrens}\n      </div>\n    );\n  };\n\n  return renderCard();\n};\n\nexport default Card;\n"],"names":["CardTop","props","id","children","className","rest","_jsx","CardImg","hoverButton","restAux","__rest","_jsxs","__assign","concat","CardHeader","CardBody","CardFooter","CardFloatButtons","Card","horizontal","selected","onClick","cardImg","cardFloatButtons","contentChildrens","React","Children","forEach","_childItem","type","push","_cardImgChild","cloneElement","length","renderCard"],"mappings":"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"}
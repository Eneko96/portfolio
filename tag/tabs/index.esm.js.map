{"version":3,"file":"index.esm.js","sources":["../../src/components/tabs/tabItem.tsx","../../src/components/dropdown/dropdownButton.tsx","../../src/components/dropdown/dropdownMenu.tsx","../../src/components/dropdown/dropdown.tsx","../../src/components/tabs/tabs.tsx","../../src/hooks/useDevice/useDevice.tsx"],"sourcesContent":["import React from 'react';\n\nexport interface ITabItemProps {\n  /**\n   * Identifies the tab item\n   */\n  id: string;\n  /**\n   * Tab name to show\n   */\n  title: string;\n  /**\n   * Adds the tab to the dropdown menu\n   */\n  collapsed?: boolean;\n  /**\n   * Identify if this tab is selected\n   */\n  activeTab?: string;\n  /**\n   * Identify if this tab is disabled\n   */\n  disabled?: boolean;\n  [others: string]: any;\n}\n\nconst TabItem: React.FC<ITabItemProps> = (props) => {\n  const {id, activeTab, children,title, ...rest} = props;\n\n  return activeTab ? (\n    <div\n      {...rest}\n      data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-content` : undefined}\n      id={`${id || title}-content`}\n      key={`${id || title}-content`}\n      className=\"tab-content\"\n    >\n      {children}\n    </div>\n  ) : (\n    <></>\n  );\n};\n\nexport default TabItem;\n","import React, {useEffect} from 'react';\nimport {useDropdown} from './dropdown';\nexport interface DropdownButtonProps {\n  className?: string;\n  disabled?: boolean;\n  children: React.ReactNode;\n\n  [others: string]: any;\n}\n\nconst DropdownButton: React.FC<DropdownButtonProps> = ({children, className, disabled, ...rest}) => {\n  const {onToggleMenu, setDropdownButtonDimensions, showMenu} = useDropdown();\n  const dropdownButtonRef = React.useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (dropdownButtonRef && dropdownButtonRef.current) {\n      const positionButton = dropdownButtonRef.current.getBoundingClientRect();\n      if (positionButton) setDropdownButtonDimensions({width: positionButton.width, height: positionButton.height});\n    }\n  }, [showMenu]);\n  return (\n    <div\n      className={`dropdown-button${disabled ? '_disabled' : ''} ${className || ''}`}\n      onClick={onToggleMenu}\n      ref={dropdownButtonRef}\n      {...rest}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default React.memo(DropdownButton);\n","import React, {useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport {useDropdown} from './dropdown';\n\nexport interface DropdownMenuProps {\n  className?: string;\n  [others: string]: any;\n}\n\nconst DropdownMenu: React.FC<DropdownMenuProps> = ({className, children, ...rest}) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const {showMenu, setDropdownMenuDimensions, position, dropdownRef, handleClickMenu} = useDropdown();\n\n  useEffect(() => {\n    if (ref && ref.current) {\n      const positionMenu = ref.current.getBoundingClientRect();\n      if (positionMenu)\n        setDropdownMenuDimensions({\n          width: positionMenu.width,\n          height: positionMenu.height,\n        });\n    }\n  }, [showMenu]);\n\n  const content = (\n    <div\n      ref={ref}\n      className={`dropdown-menu ${showMenu ? '' : 'hidden'} ${className || ''}`}\n      style={position}\n      onClick={handleClickMenu}\n      {...rest}\n    >\n      {children}\n    </div>\n  );\n  if (dropdownRef && dropdownRef.current) {\n    const root = document.getElementById('root');\n    return ReactDOM.createPortal(content, dropdownRef.current || root || document.body);\n  }\n  return null;\n};\n\nexport default DropdownMenu;\n","import React, {useContext, useEffect, useMemo, useRef, useState} from 'react';\n\nexport {default as DropdownButton} from './dropdownButton';\nexport {default as DropdownMenu} from './dropdownMenu';\nconst DropdownContext = React.createContext({});\ntype DropdownPosition = 'top' | 'bottom' | 'right' | 'left';\ninterface DropdownProps {\n  className?: string;\n  onChangeToggleMenu?: (state: boolean) => void;\n  itemsDivider?: boolean;\n  forceRefresh?: number;\n  defaultShow?: boolean;\n  keepShown?: boolean;\n  placement?: DropdownPosition;\n  [others: string]: any;\n}\n\ninterface IDropdownContext {\n  showMenu: boolean;\n  setDropdownMenuDimensions: (dimensions: {width: number; height: number}) => void;\n  setDropdownButtonDimensions: (dimensions: {width: number; height: number}) => void;\n  handleClickMenu: (e: React.MouseEvent<HTMLDivElement>) => void;\n  position: {left: string; top: string};\n  itemsDivider: boolean;\n  dropdownRef: React.RefObject<HTMLDivElement>;\n  onToggleMenu: () => void;\n}\n\nconst Dropdown: React.FC<DropdownProps> = ({\n  children,\n  className,\n  onChangeToggleMenu,\n  itemsDivider,\n  forceRefresh,\n  defaultShow,\n  keepShown = false,\n  placement = 'bottom',\n  ...rest\n}) => {\n  const [showMenu, setShowMenu] = useState(false);\n  const [refresh, setRefresh] = useState(forceRefresh ? forceRefresh : 0);\n  const [dropdownMenuDim, setDropdownMenuDim] = useState({width: 0, height: 0});\n  const [dropdownButtonDim, setDropdownButtonDim] = useState({width: 0, height: 0});\n\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (defaultShow !== undefined && defaultShow !== showMenu) {\n      setShowMenu(defaultShow as boolean);\n    }\n  }, [defaultShow]);\n\n  useEffect(() => {\n    if (forceRefresh && refresh !== forceRefresh) setRefresh(forceRefresh);\n  }, [forceRefresh, refresh]);\n\n  const onToggleMenu = () => {\n    setShowMenu((prev) => {\n      if (typeof onChangeToggleMenu === 'function') onChangeToggleMenu(!prev);\n      return !prev;\n    });\n  };\n\n  const handleClickOutside = (event: MouseEvent) => {\n    if (event && event.target) {\n      if (\n        dropdownRef &&\n        dropdownRef.current &&\n        dropdownRef.current.getAttribute('data-show') === 'true' &&\n        !dropdownRef.current.contains(event.target as Node)\n      ) {\n        setShowMenu(false);\n        if (typeof onChangeToggleMenu === 'function') onChangeToggleMenu(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    document.addEventListener('scroll', () => setRefresh((prev) => prev++));\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n      document.removeEventListener('scroll', () => setRefresh((prev) => prev++));\n    };\n  }, []);\n\n  const topStr = (top: number, menuHeight: number) => `calc(${top}px - ${menuHeight}px - var(--unit))`;\n  const bottomStr = (top: number, buttonHeight: number) => `calc(${top}px + ${buttonHeight}px + var(--unit))`;\n  const rightStr = (left: number, buttonWidth: number) => `calc(${left}px + ${buttonWidth}px + var(--unit))`;\n  const leftStr = (left: number, menuWidth: number) => `calc(${left}px - ${menuWidth}px - var(--unit))`;\n  const leftAlignment = (left: number) => `${left}px`;\n  const rightAlignment = (left: number, menuWidth: number, buttonWidth: number) =>\n    `calc(${left}px + ${buttonWidth}px - ${menuWidth}px)`;\n  const topAlignment = (top: number) => `${top}px`;\n  const bottomAlignment = (top: number, menuHeight: number, buttonHeight: number) =>\n    `calc(${top}px + ${buttonHeight}px - ${menuHeight}px)`;\n\n  const position = useMemo(() => {\n    let left,\n      top = '',\n      dropdownMenuWidth = 0;\n\n    if (dropdownRef && dropdownRef.current) {\n      const position = dropdownRef.current.getBoundingClientRect();\n      dropdownMenuWidth = dropdownMenuDim.width < dropdownButtonDim.width ? dropdownButtonDim.width : dropdownMenuDim.width;\n      const {clientHeight, clientWidth} = document.body;\n      switch (placement) {\n        case 'top':\n          if (position.top - dropdownMenuDim.height - 8 < 0) {\n            top = bottomStr(position.top, dropdownButtonDim.height);\n          } else {\n            top = topStr(position.top, dropdownMenuDim.height);\n          }\n          if (position.left + dropdownMenuWidth > clientWidth) {\n            left = rightAlignment(position.left, dropdownMenuWidth, dropdownButtonDim.width);\n          } else {\n            left = leftAlignment(position.left);\n          }\n          break;\n        case 'right':\n          if (position.left + dropdownMenuWidth + 8 > clientWidth) {\n            left = leftStr(position.left, dropdownMenuWidth);\n          } else {\n            left = rightStr(position.left, dropdownButtonDim.width);\n          }\n          if (position.top + dropdownMenuDim.height > clientHeight) {\n            top = bottomAlignment(position.top, dropdownMenuDim.height, dropdownButtonDim.height);\n          } else {\n            top = topAlignment(position.top);\n          }\n          break;\n        case 'bottom':\n          if (position.top + dropdownMenuDim.height + 8 > clientHeight) {\n            top = topStr(position.top, dropdownMenuDim.height);\n          } else {\n            top = bottomStr(position.top, dropdownButtonDim.height);\n          }\n          if (position.left + dropdownMenuWidth > clientWidth) {\n            left = rightAlignment(position.left, dropdownMenuWidth, dropdownButtonDim.width);\n          } else {\n            left = leftAlignment(position.left);\n          }\n          break;\n        case 'left':\n          if (position.left - dropdownMenuWidth - 8 < 0) {\n            left = rightStr(position.left, dropdownButtonDim.width);\n          } else {\n            left = leftStr(position.left, dropdownMenuWidth);\n          }\n          if (position.top + dropdownMenuDim.height > clientHeight) {\n            top = bottomAlignment(position.top, dropdownMenuDim.height, dropdownButtonDim.height);\n          } else {\n            top = topAlignment(position.top);\n          }\n          break;\n      }\n    }\n    return {left, top, width: `${dropdownMenuWidth}px`};\n  }, [dropdownMenuDim, dropdownButtonDim]);\n\n  const handleClickMenu = () => {\n    if (!keepShown) {\n      setShowMenu(false);\n      if (typeof onChangeToggleMenu === 'function') onChangeToggleMenu(false);\n    }\n  };\n\n  return (\n    <DropdownContext.Provider\n      value={{\n        showMenu,\n        setDropdownMenuDimensions: setDropdownMenuDim,\n        setDropdownButtonDimensions: setDropdownButtonDim,\n        handleClickMenu,\n        itemsDivider,\n        dropdownRef,\n        onChangeToggleMenu,\n        onToggleMenu,\n        position,\n      }}\n    >\n      <div ref={dropdownRef} className={`dropdown ${className || ''}`} data-show={showMenu} {...rest}>\n        {children}\n      </div>\n    </DropdownContext.Provider>\n  );\n};\n\nexport default Dropdown;\n/**\n *\n * @internal\n */\nexport const useDropdown = () => useContext(DropdownContext) as IDropdownContext;\n","import React, {useEffect, useState} from 'react';\nimport TabItem from './tabItem';\nimport Dropdown, {DropdownButton, DropdownMenu} from '../dropdown/dropdown';\nimport {useDevice} from '../../hooks/useDevice/useDevice';\n\nexport {default as TabItem} from './tabItem';\nexport interface ITabsProps {\n  /**\n   * Change horizontal for vertical allignment\n   */\n  vertical?: boolean;\n  /**\n   * Indicates the active tab when the component is rendered\n   */\n  defaultActiveTab?: string;\n  onChangeTab?: (_id: string) => void;\n  className?: string;\n  [others: string]: any;\n}\n\nconst Tabs: React.FC<ITabsProps> = ({defaultActiveTab, vertical, children, className, onChangeTab, ...rest}) => {\n  const {isMobile} = useDevice();\n  const [activeTab, setActiveTab] = useState<string>(defaultActiveTab ? defaultActiveTab : '');\n\n  useEffect(() => {\n    if (defaultActiveTab && defaultActiveTab !== activeTab) setActiveTab(defaultActiveTab);\n  }, [defaultActiveTab]);\n\n  const onClickTab = (e: React.MouseEvent<HTMLButtonElement>) => {\n    const _id = e.currentTarget.id;\n    setActiveTab(_id);\n    if (typeof onChangeTab === 'function') onChangeTab(_id);\n  };\n\n  const renderList = () => {\n    let _list: any = [];\n    let _dropdownMenu: any = [];\n    let itemsCollapsed = 0;\n    if (children) {\n      if (React.Children.toArray(children).length > 1) {\n        React.Children.forEach(children, (_child: any, index: number) => {\n          if (_child && _child.type === TabItem) {\n            const {id, disabled, title, collapsed, ...rest} = _child.props;\n            if (((!isMobile && index - itemsCollapsed <= 5) || (isMobile && index - itemsCollapsed < 3)) && !collapsed) {\n              _list.push(\n                <button\n                  type=\"button\"\n                  {...rest}\n                  id={id}\n                  key={`${id}-key`}\n                  disabled={disabled}\n                  onClick={onClickTab}\n                  className={`tab-list-item ${activeTab === id || (!activeTab && index === 0) ? 'active' : ''}`}\n                >\n                  {title}\n                </button>\n              );\n            } else {\n              itemsCollapsed++;\n              _dropdownMenu.push(\n                <button\n                  type=\"button\"\n                  {...rest}\n                  id={id}\n                  key={`${id}-key`}\n                  disabled={disabled}\n                  onClick={onClickTab}\n                  className={`dropdown-item tab-list-item ${\n                    activeTab === id || (!activeTab && index === 1) ? 'active' : ''\n                  }`}\n                >\n                  {title}\n                </button>\n              );\n            }\n          }\n        });\n      } else {\n        const _uniqueChild = children as any;\n        if (_uniqueChild && _uniqueChild.type === TabItem) {\n          const {title, id, disabled, ...rest} = _uniqueChild.props;\n          if (!_uniqueChild.props?.collapsed) {\n            _list = (\n              <button\n                {...rest}\n                type=\"button\"\n                id={id}\n                key={`${id}-key`}\n                disabled={disabled}\n                onClick={onClickTab}\n                className=\"tab-list-item active\"\n              >\n                {title}\n              </button>\n            );\n          } else {\n            _dropdownMenu = (\n              <button\n                {...rest}\n                type=\"button\"\n                id={id}\n                key={`${id}-key`}\n                disabled={disabled}\n                onClick={onClickTab}\n                className=\"dropdown-item tab-list-item active\"\n              >\n                {title}\n              </button>\n            );\n          }\n        }\n      }\n    }\n\n    if (_dropdownMenu && _dropdownMenu.length) {\n      _list.push(renderDropdown(_dropdownMenu, _list.length - 1));\n    }\n\n    return <div className=\"tab-list\">{_list}</div>;\n  };\n\n  const renderDropdown = (menu: any, listLenght: number) => {\n    const _disabledElements = (menu as any[]).filter((_element: any) => _element.props?.disabled);\n    const _activeElements = (menu as any[]).filter((_element: any) => {\n      const _classes = _element.props?.className.split(' ');\n      if (_classes[_classes.length - 1] === 'active') return true;\n      return false;\n    });\n\n    return (\n      <Dropdown key={'dropdown-' + listLenght} itemsDivider={!vertical}>\n        <DropdownButton disabled={_disabledElements.length === menu.length}>\n          <button type=\"button\" className={_activeElements.length ? 'active' : ''}>\n            <span className=\"material-icons\">more_vert</span>\n          </button>\n        </DropdownButton>\n        <DropdownMenu>{menu}</DropdownMenu>\n      </Dropdown>\n    );\n  };\n\n  const renderContent = () => {\n    let _content;\n    if (children) {\n      if (React.Children.toArray(children).length > 1) {\n        _content = React.Children.map(children, (_child: any, index: number) => {\n          const _childClone = React.cloneElement(_child, {\n            activeTab: activeTab === _child.props?.id || (!activeTab && index === 0),\n          });\n          return _childClone;\n        });\n      } else {\n        const _uniqueChild = children as any;\n        if (_uniqueChild.type === TabItem) {\n          const _uniqueChildClone = React.cloneElement(_uniqueChild, {\n            activeTab: true,\n          });\n          _content = _uniqueChildClone;\n        }\n      }\n    }\n    return _content;\n  };\n\n  return (\n    <div className={`${vertical ? 'tabs-vertical' : 'tabs'} ${className || ''}`} {...rest}>\n      {renderList()}\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default Tabs;\n","import {useEffect, useState} from 'react';\n\nexport interface IUseDevice {\n  isMobile: boolean;\n  isTablet: boolean;\n  isDesktop: boolean;\n}\n\n/**\n *\n * @internal\n */\nexport const useDevice = (): IUseDevice => {\n  const [isMobile, setIsMobile] = useState(false);\n  const [isTablet, setIsTablet] = useState(false);\n  const [isDesktop, setIsDesktop] = useState(false);\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth <= 672) {\n        setIsMobile(true);\n        setIsTablet(false);\n        setIsDesktop(false);\n      } else if (window.innerWidth <= 1024) {\n        setIsMobile(false);\n        setIsTablet(true);\n        setIsDesktop(false);\n      } else {\n        setIsMobile(false);\n        setIsTablet(false);\n        setIsDesktop(true);\n      }\n    };\n\n    handleResize();\n\n    return () => handleResize();\n  }, []);\n  return {isMobile, isTablet, isDesktop};\n};\n"],"names":["TabItem","props","id","activeTab","children","title","rest","__rest","_createElement","__assign","concat","undefined","key","className","_jsx","_Fragment","DropdownButton$1","React","memo","_a","disabled","_b","useDropdown","onToggleMenu","setDropdownButtonDimensions","showMenu","dropdownButtonRef","useRef","useEffect","current","positionButton","getBoundingClientRect","width","height","onClick","ref","DropdownMenu","setDropdownMenuDimensions","position","dropdownRef","handleClickMenu","positionMenu","content","style","root","document","getElementById","ReactDOM","createPortal","body","DropdownContext","createContext","Dropdown","onChangeToggleMenu","itemsDivider","forceRefresh","defaultShow","keepShown","_c","placement","_d","__read","useState","setShowMenu","_e","refresh","setRefresh","_f","dropdownMenuDim","setDropdownMenuDim","_g","dropdownButtonDim","setDropdownButtonDim","handleClickOutside","event","target","getAttribute","contains","addEventListener","prev","removeEventListener","topStr","top","menuHeight","bottomStr","buttonHeight","rightStr","left","buttonWidth","leftStr","menuWidth","leftAlignment","rightAlignment","topAlignment","bottomAlignment","useMemo","dropdownMenuWidth","position_1","clientHeight","clientWidth","Provider","value","useContext","Tabs","defaultActiveTab","vertical","onChangeTab","isMobile","setIsMobile","isTablet","setIsTablet","isDesktop","setIsDesktop","handleResize","window","innerWidth","useDevice","setActiveTab","onClickTab","e","_id","currentTarget","renderDropdown","menu","listLenght","_disabledElements","filter","_element","_activeElements","_classes","split","length","_jsxs","DropdownButton","type","_list","_dropdownMenu","itemsCollapsed","Children","toArray","forEach","_child","index","collapsed","rest_1","push","_uniqueChild","rest_2","renderList","_content","map","cloneElement","renderContent"],"mappings":"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"}
{"version":3,"file":"index.esm.js","sources":["../../src/components/header/headerLogo.tsx","../../src/components/overflowMenu/overflowMenu.tsx","../../src/components/treeView/treeViewElement.tsx","../../src/components/treeView/treeView.tsx","../../src/components/header/headerItem.tsx","../../src/components/dropdown/dropdownButton.tsx","../../src/components/dropdown/dropdownMenu.tsx","../../src/components/dropdown/dropdown.tsx","../../src/components/header/header.tsx","../../src/hooks/useDevice/useDevice.tsx"],"sourcesContent":["import React from 'react';\n\nexport interface IHeaderLogoProps {\n  className?: string;\n  [others: string]: any;\n}\n\nconst HeaderLogo: React.FC<IHeaderLogoProps> = (props) => {\n  const {className, children, ...rest} = props;\n  let _children: any = null;\n  if (children) {\n    _children = React.cloneElement(children as any, {\n      ...(children as any).props,\n      ...rest,\n      className: `header-logo ${(children as any).props.className || ''} ${className || ''}`,\n    });\n  }\n  return _children;\n};\n\nexport default HeaderLogo;\n","import React, {useEffect, useRef} from 'react';\n\nexport interface IOverflowMenuProps {\n  show: boolean;\n  /**\n   * Title of the Overflow Menu\n   */\n  title: string;\n  /**\n   * Name of the action if needed\n   */\n  action?: string;\n  /**\n   * Displays close button and handles the event\n   */\n  onClose: () => void;\n  showCloseButton?: boolean;\n  /**\n   * Handler for the action Button\n   */\n  onAction?: () => void;\n  className?: string;\n  parentRef?: any;\n  [other: string]: any;\n}\n\nconst OverflowMenu: React.FC<IOverflowMenuProps> = ({\n  show,\n  children,\n  title,\n  action,\n  onClose,\n  showCloseButton,\n  onAction,\n  className,\n  parentRef,\n  ...rest\n}) => {\n  const overflowRef = useRef<HTMLDivElement>(null);\n  const handleCloseOutsideOverflow = (event: MouseEvent) => {\n    if (event && event.target) {\n      if (\n        ((overflowRef && overflowRef.current && !overflowRef.current.contains(event.target as Node) && !parentRef) ||\n          (overflowRef &&\n            overflowRef.current &&\n            !overflowRef.current.contains(event.target as Node) &&\n            parentRef &&\n            parentRef.current &&\n            !parentRef.current.contains(event.target as Node))) &&\n        show\n      ) {\n        onClose();\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (!showCloseButton && !(rest && rest['data-handlecloseclick'])) {\n      document.addEventListener('mousemove', handleCloseOutsideOverflow);\n    } else {\n      document.addEventListener('click', handleCloseOutsideOverflow);\n    }\n    return () => {\n      document.removeEventListener('mousemove', handleCloseOutsideOverflow);\n      document.removeEventListener('click', handleCloseOutsideOverflow);\n    };\n  });\n  return show ? (\n    <div\n      ref={overflowRef}\n      className={`overflow-menu ${className || ''}`}\n      data-testid={rest['data-testid'] ? rest['data-testid'] : undefined}\n      {...rest}\n    >\n      <div className=\"overflow-menu-header\">\n        {title && <div className=\"small-title mr3\">{title}</div>}\n        {action && (\n          <div\n            className=\"overflow-menu-action link_small\"\n            onClick={onAction}\n            data-testid={rest['data-testid'] ? rest['data-testid'] + '-action-button' : undefined}\n          >\n            {action}\n          </div>\n        )}\n\n        {showCloseButton && (\n          <button\n            type=\"button\"\n            className=\"overflow-menu-close\"\n            onClick={onClose}\n            data-testid={rest['data-testid'] ? rest['data-testid'] + '-close-button' : undefined}\n          >\n            <span className=\"material-icons\">close</span>\n          </button>\n        )}\n      </div>\n      <div className=\"overflow-menu-body\">{children}</div>\n    </div>\n  ) : null;\n};\n\nexport default OverflowMenu;\n","import React, {useState} from 'react';\n\nexport interface ITreeElement {\n  /**\n   * Name of the Tree Element\n   */\n  name: string;\n  /**\n   * For disabling the Tree Element\n   */\n  disabled?: boolean;\n  /**\n   * click event on developers needs\n   */\n  onClick?: (e?: React.MouseEvent) => void;\n  /**\n   * Alternative className on Tree.Element\n   */\n  className?: string;\n  /**\n   * prop for displaying an icon if needed\n   */\n  icon?: string;\n  /**\n   * By default left sided arrow, can be passed an oposite side (both will show up if they have children)\n   */\n  arrow?: 'left' | 'right' | 'none';\n  [others: string]: any;\n}\n\nconst TreeViewElement: React.FC<ITreeElement> = ({\n  children,\n  name,\n  onClick,\n  disabled,\n  className,\n  arrow = 'left',\n  icon,\n  ...rest\n}) => {\n  const [showChildren, setShowChildren] = useState<boolean>(false);\n\n  const handleClickElement = (e: React.MouseEvent) => {\n    setShowChildren(!showChildren);\n    if (typeof onClick === 'function') onClick(e);\n  };\n\n  const renderIcon = () => {\n    if (icon) return icon;\n    if (!icon && arrow === 'left') return 'arrow_right';\n    return '';\n  };\n\n  return (\n    <>\n      <button\n        type=\"button\"\n        disabled={disabled}\n        className={`list-icon tree-element ${className || ''}`}\n        onClick={handleClickElement}\n        {...rest}\n      >\n        <li className=\"item-condensed tree-li\">\n          {children || icon ? (\n            <span className=\"material-icons icon-order\">{renderIcon()}</span>\n          ) : (\n            <span className=\"icon-order\" />\n          )}\n          {name}\n          {arrow === 'right' &&\n            children &&\n            (showChildren ? (\n              <span className=\"material-icons tree-element-icon-right\">keyboard_arrow_up</span>\n            ) : (\n              <span className=\"material-icons tree-element-icon-right\">keyboard_arrow_down</span>\n            ))}\n        </li>\n      </button>\n      {children &&\n        showChildren &&\n        React.Children.toArray(children).map((_child, _idx) => (\n          <div key={_idx} className=\"tree-element-item\">\n            {_child}\n          </div>\n        ))}\n    </>\n  );\n};\n\nexport default TreeViewElement;\n","import React from 'react';\nimport TreeViewElement from './treeViewElement';\nexport {default as TreeViewElement} from './treeViewElement';\n\ninterface ITree {\n  /**\n   * Alternative className for Tree\n   */\n  className?: string;\n  [other: string]: any;\n}\n\nconst Tree: React.FC<ITree> = ({children, className, ...rest}) => {\n  const renderable = React.Children.toArray(children).every((child: any) => child.type === TreeViewElement);\n  return renderable ? (\n    <div className={`tree-container ${className || ''}`} {...rest}>\n      {children}\n    </div>\n  ) : null;\n};\n\nexport default Tree;\n","import React, {useRef, useState} from 'react';\nimport OverflowMenu from '../overflowMenu/overflowMenu';\nimport Tree, {TreeViewElement} from '../treeView/treeView';\n\nexport interface IHeaderItemOption {\n  id?: string;\n  label: string;\n  onClick?: () => void;\n  href?: string;\n}\nexport interface IHeaderItemProps {\n  id?: string;\n  className?: string;\n  selected?: boolean;\n  disabled?: boolean;\n  onClick?: () => void;\n  options?: IHeaderItemOption[];\n  optionsDivider?: boolean;\n  children: string;\n  [others: string]: any;\n}\n\nconst HeaderItem: React.FC<IHeaderItemProps> = (props) => {\n  const {className, children, id, selected, onClick, options, disabled, optionsDivider, ...rest} = props;\n  const [showOptions, setShowOptions] = useState(false);\n  const buttonRef = useRef<HTMLButtonElement>(null);\n  const onClickItem = (e?: React.MouseEvent) => {\n    if (options) {\n      if (rest && rest['data-mobile']) e?.stopPropagation();\n      setShowOptions(!showOptions);\n    }\n    if (typeof onClick === 'function') {\n      onClick();\n    }\n  };\n  const renderItem = () => {\n    if (rest && rest['data-mobile']) {\n      return (\n        <Tree>\n          <TreeViewElement name={children} arrow=\"right\" onClick={onClickItem} {...rest}>\n            {options &&\n              options.map((_opt: IHeaderItemOption, _idx: number) =>\n                _opt.href ? (\n                  <a\n                    data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-option-${_idx}` : undefined}\n                    key={_opt.id || `header-item-option-${_idx}`}\n                    href={_opt.href}\n                  >\n                    {_opt.label}\n                  </a>\n                ) : (\n                  <div\n                    key={_opt.id || `header-item-option-${_idx}`}\n                    data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-option-${_idx}` : undefined}\n                    onClick={() => {\n                      if (typeof _opt.onClick === 'function') _opt.onClick();\n                    }}\n                  >\n                    {_opt.label}\n                  </div>\n                )\n              )}\n          </TreeViewElement>\n        </Tree>\n      );\n    }\n    return (\n      <button\n        type=\"button\"\n        ref={buttonRef}\n        id={id}\n        key={'button-' + id}\n        data-testid={rest && rest['data-testid'] ? rest['data-testid'] : undefined}\n        disabled={disabled}\n        onClick={onClickItem}\n        className={`tab-list-item ${selected ? 'active' : ''} ${className || ''}`}\n      >\n        {children}\n        {options && (\n          <OverflowMenu\n            className={`header-item-overflow-menu${optionsDivider ? '_divider' : ''}`}\n            title={children as string}\n            show={showOptions}\n            onClose={() => setShowOptions(false)}\n            parentRef={buttonRef}\n            data-handlecloseclick\n            data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-overflow-menu` : undefined}\n          >\n            {options.map((_opt: IHeaderItemOption, _idx: number) =>\n              _opt.href ? (\n                <a\n                  data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-overflow-menu-item-${_idx}` : undefined}\n                  className=\"dropdown-item\"\n                  key={_opt.id || `header-item-option-${_idx}`}\n                  href={_opt.href}\n                >\n                  {_opt.label}\n                </a>\n              ) : (\n                <div\n                  key={_opt.id || `header-item-option-${_idx}`}\n                  className=\"dropdown-item\"\n                  onClick={() => {\n                    if (typeof _opt.onClick === 'function') _opt.onClick();\n                  }}\n                  data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-overflow-menu-item-${_idx}` : undefined}\n                >\n                  {_opt.label}\n                </div>\n              )\n            )}\n          </OverflowMenu>\n        )}\n      </button>\n    );\n  };\n  return renderItem();\n};\n\nexport default HeaderItem;\n","import React, {useEffect} from 'react';\nimport {useDropdown} from './dropdown';\nexport interface DropdownButtonProps {\n  className?: string;\n  disabled?: boolean;\n  children: React.ReactNode;\n\n  [others: string]: any;\n}\n\nconst DropdownButton: React.FC<DropdownButtonProps> = ({children, className, disabled, ...rest}) => {\n  const {onToggleMenu, setDropdownButtonDimensions, showMenu} = useDropdown();\n  const dropdownButtonRef = React.useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (dropdownButtonRef && dropdownButtonRef.current) {\n      const positionButton = dropdownButtonRef.current.getBoundingClientRect();\n      if (positionButton) setDropdownButtonDimensions({width: positionButton.width, height: positionButton.height});\n    }\n  }, [showMenu]);\n  return (\n    <div\n      className={`dropdown-button${disabled ? '_disabled' : ''} ${className || ''}`}\n      onClick={onToggleMenu}\n      ref={dropdownButtonRef}\n      {...rest}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default React.memo(DropdownButton);\n","import React, {useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport {useDropdown} from './dropdown';\n\nexport interface DropdownMenuProps {\n  className?: string;\n  [others: string]: any;\n}\n\nconst DropdownMenu: React.FC<DropdownMenuProps> = ({className, children, ...rest}) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const {showMenu, setDropdownMenuDimensions, position, dropdownRef, handleClickMenu} = useDropdown();\n\n  useEffect(() => {\n    if (ref && ref.current) {\n      const positionMenu = ref.current.getBoundingClientRect();\n      if (positionMenu)\n        setDropdownMenuDimensions({\n          width: positionMenu.width,\n          height: positionMenu.height,\n        });\n    }\n  }, [showMenu]);\n\n  const content = (\n    <div\n      ref={ref}\n      className={`dropdown-menu ${showMenu ? '' : 'hidden'} ${className || ''}`}\n      style={position}\n      onClick={handleClickMenu}\n      {...rest}\n    >\n      {children}\n    </div>\n  );\n  if (dropdownRef && dropdownRef.current) {\n    const root = document.getElementById('root');\n    return ReactDOM.createPortal(content, dropdownRef.current || root || document.body);\n  }\n  return null;\n};\n\nexport default DropdownMenu;\n","import React, {useContext, useEffect, useMemo, useRef, useState} from 'react';\n\nexport {default as DropdownButton} from './dropdownButton';\nexport {default as DropdownMenu} from './dropdownMenu';\nconst DropdownContext = React.createContext({});\ntype DropdownPosition = 'top' | 'bottom' | 'right' | 'left';\ninterface DropdownProps {\n  className?: string;\n  onChangeToggleMenu?: (state: boolean) => void;\n  itemsDivider?: boolean;\n  forceRefresh?: number;\n  defaultShow?: boolean;\n  keepShown?: boolean;\n  placement?: DropdownPosition;\n  [others: string]: any;\n}\n\ninterface IDropdownContext {\n  showMenu: boolean;\n  setDropdownMenuDimensions: (dimensions: {width: number; height: number}) => void;\n  setDropdownButtonDimensions: (dimensions: {width: number; height: number}) => void;\n  handleClickMenu: (e: React.MouseEvent<HTMLDivElement>) => void;\n  position: {left: string; top: string};\n  itemsDivider: boolean;\n  dropdownRef: React.RefObject<HTMLDivElement>;\n  onToggleMenu: () => void;\n}\n\nconst Dropdown: React.FC<DropdownProps> = ({\n  children,\n  className,\n  onChangeToggleMenu,\n  itemsDivider,\n  forceRefresh,\n  defaultShow,\n  keepShown = false,\n  placement = 'bottom',\n  ...rest\n}) => {\n  const [showMenu, setShowMenu] = useState(false);\n  const [refresh, setRefresh] = useState(forceRefresh ? forceRefresh : 0);\n  const [dropdownMenuDim, setDropdownMenuDim] = useState({width: 0, height: 0});\n  const [dropdownButtonDim, setDropdownButtonDim] = useState({width: 0, height: 0});\n\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (defaultShow !== undefined && defaultShow !== showMenu) {\n      setShowMenu(defaultShow as boolean);\n    }\n  }, [defaultShow]);\n\n  useEffect(() => {\n    if (forceRefresh && refresh !== forceRefresh) setRefresh(forceRefresh);\n  }, [forceRefresh, refresh]);\n\n  const onToggleMenu = () => {\n    setShowMenu((prev) => {\n      if (typeof onChangeToggleMenu === 'function') onChangeToggleMenu(!prev);\n      return !prev;\n    });\n  };\n\n  const handleClickOutside = (event: MouseEvent) => {\n    if (event && event.target) {\n      if (\n        dropdownRef &&\n        dropdownRef.current &&\n        dropdownRef.current.getAttribute('data-show') === 'true' &&\n        !dropdownRef.current.contains(event.target as Node)\n      ) {\n        setShowMenu(false);\n        if (typeof onChangeToggleMenu === 'function') onChangeToggleMenu(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    document.addEventListener('scroll', () => setRefresh((prev) => prev++));\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n      document.removeEventListener('scroll', () => setRefresh((prev) => prev++));\n    };\n  }, []);\n\n  const topStr = (top: number, menuHeight: number) => `calc(${top}px - ${menuHeight}px - var(--unit))`;\n  const bottomStr = (top: number, buttonHeight: number) => `calc(${top}px + ${buttonHeight}px + var(--unit))`;\n  const rightStr = (left: number, buttonWidth: number) => `calc(${left}px + ${buttonWidth}px + var(--unit))`;\n  const leftStr = (left: number, menuWidth: number) => `calc(${left}px - ${menuWidth}px - var(--unit))`;\n  const leftAlignment = (left: number) => `${left}px`;\n  const rightAlignment = (left: number, menuWidth: number, buttonWidth: number) =>\n    `calc(${left}px + ${buttonWidth}px - ${menuWidth}px)`;\n  const topAlignment = (top: number) => `${top}px`;\n  const bottomAlignment = (top: number, menuHeight: number, buttonHeight: number) =>\n    `calc(${top}px + ${buttonHeight}px - ${menuHeight}px)`;\n\n  const position = useMemo(() => {\n    let left,\n      top = '',\n      dropdownMenuWidth = 0;\n\n    if (dropdownRef && dropdownRef.current) {\n      const position = dropdownRef.current.getBoundingClientRect();\n      dropdownMenuWidth = dropdownMenuDim.width < dropdownButtonDim.width ? dropdownButtonDim.width : dropdownMenuDim.width;\n      const {clientHeight, clientWidth} = document.body;\n      switch (placement) {\n        case 'top':\n          if (position.top - dropdownMenuDim.height - 8 < 0) {\n            top = bottomStr(position.top, dropdownButtonDim.height);\n          } else {\n            top = topStr(position.top, dropdownMenuDim.height);\n          }\n          if (position.left + dropdownMenuWidth > clientWidth) {\n            left = rightAlignment(position.left, dropdownMenuWidth, dropdownButtonDim.width);\n          } else {\n            left = leftAlignment(position.left);\n          }\n          break;\n        case 'right':\n          if (position.left + dropdownMenuWidth + 8 > clientWidth) {\n            left = leftStr(position.left, dropdownMenuWidth);\n          } else {\n            left = rightStr(position.left, dropdownButtonDim.width);\n          }\n          if (position.top + dropdownMenuDim.height > clientHeight) {\n            top = bottomAlignment(position.top, dropdownMenuDim.height, dropdownButtonDim.height);\n          } else {\n            top = topAlignment(position.top);\n          }\n          break;\n        case 'bottom':\n          if (position.top + dropdownMenuDim.height + 8 > clientHeight) {\n            top = topStr(position.top, dropdownMenuDim.height);\n          } else {\n            top = bottomStr(position.top, dropdownButtonDim.height);\n          }\n          if (position.left + dropdownMenuWidth > clientWidth) {\n            left = rightAlignment(position.left, dropdownMenuWidth, dropdownButtonDim.width);\n          } else {\n            left = leftAlignment(position.left);\n          }\n          break;\n        case 'left':\n          if (position.left - dropdownMenuWidth - 8 < 0) {\n            left = rightStr(position.left, dropdownButtonDim.width);\n          } else {\n            left = leftStr(position.left, dropdownMenuWidth);\n          }\n          if (position.top + dropdownMenuDim.height > clientHeight) {\n            top = bottomAlignment(position.top, dropdownMenuDim.height, dropdownButtonDim.height);\n          } else {\n            top = topAlignment(position.top);\n          }\n          break;\n      }\n    }\n    return {left, top, width: `${dropdownMenuWidth}px`};\n  }, [dropdownMenuDim, dropdownButtonDim]);\n\n  const handleClickMenu = () => {\n    if (!keepShown) {\n      setShowMenu(false);\n      if (typeof onChangeToggleMenu === 'function') onChangeToggleMenu(false);\n    }\n  };\n\n  return (\n    <DropdownContext.Provider\n      value={{\n        showMenu,\n        setDropdownMenuDimensions: setDropdownMenuDim,\n        setDropdownButtonDimensions: setDropdownButtonDim,\n        handleClickMenu,\n        itemsDivider,\n        dropdownRef,\n        onChangeToggleMenu,\n        onToggleMenu,\n        position,\n      }}\n    >\n      <div ref={dropdownRef} className={`dropdown ${className || ''}`} data-show={showMenu} {...rest}>\n        {children}\n      </div>\n    </DropdownContext.Provider>\n  );\n};\n\nexport default Dropdown;\n/**\n *\n * @internal\n */\nexport const useDropdown = () => useContext(DropdownContext) as IDropdownContext;\n","import React from 'react';\nimport HeaderLogo from './headerLogo';\nimport HeaderItem from './headerItem';\nimport Dropdown, {DropdownButton, DropdownMenu} from '../dropdown/dropdown';\nimport {useDevice} from '../../hooks/useDevice/useDevice';\nexport {default as HeaderLogo} from './headerLogo';\nexport {default as HeaderItem} from './headerItem';\nexport interface IHeaderLanguage {\n  id: string;\n  label: string;\n  selected?: boolean;\n}\n\ninterface IHeaderContact {\n  label: string;\n  href: string;\n}\nexport interface IHeaderProps {\n  /**\n   * Add class name in header\n   */\n  className?: string;\n  /**\n   * Handler search icon in header\n   */\n  onSearch?: () => void;\n  /**\n   * Set options and label of languages selector in header\n   */\n  languages?: IHeaderLanguage[];\n  /**\n   * Handle onClick option in languages selector\n   */\n  onClickLanguage?: (id: string) => void;\n  /**\n   * Show link to contact with label and href\n   */\n  contact?: IHeaderContact;\n  [others: string]: any;\n}\n\nconst Header: React.FC<IHeaderProps> = (props) => {\n  const {className, children, languages, contact, onSearch, onClickLanguage, ...rest} = props;\n  const {isMobile} = useDevice();\n\n  const renderHeaderContent = () => {\n    let _logo = null;\n    const _items: any[] = [];\n    let _languageSelector: any = null,\n      _language: IHeaderLanguage | undefined,\n      _search: any = null,\n      _contact: any = null;\n    React.Children.forEach(children, (_child: any) => {\n      if (_child.type === HeaderLogo) {\n        _logo = _child;\n      } else if (_child.type === HeaderItem) {\n        if (isMobile) {\n          const _childClone = React.cloneElement(_child, {\n            ..._child.props,\n            'data-mobile': true,\n            key: _child.props.id || `header-item-${_items.length}`,\n            onClick: () => {\n              if (typeof _child.props?.onClick === 'function') _child.props.onClick();\n            },\n          });\n          _items.push(_childClone);\n        } else _items.push(_child);\n      }\n    });\n    if (languages) {\n      _language = languages.find((_lang: IHeaderLanguage) => _lang.selected);\n      _languageSelector = (\n        <Dropdown\n          key=\"header-languages-dropdown\"\n          className=\"header-languages\"\n          data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-languages-dropdown` : undefined}\n        >\n          <DropdownButton\n            data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-languages-dropdown-btn` : undefined}\n          >\n            <>\n              {_language?.label}\n              <span className=\"material-icons\">expand_more</span>\n            </>\n          </DropdownButton>\n          <DropdownMenu>\n            <ul>\n              {languages.map((_lang: IHeaderLanguage, _idxLang: number) => (\n                <li\n                  className={`dropdown-item ${_lang.selected ? 'selected' : ''}`}\n                  id={_lang.id || `language-${_idxLang}`}\n                  key={_lang.id || `language-${_idxLang}`}\n                  onClick={() => {\n                    if (typeof onClickLanguage === 'function') onClickLanguage(_lang.id);\n                  }}\n                  data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-language-${_idxLang}` : undefined}\n                >\n                  {_lang.label}\n                </li>\n              ))}\n            </ul>\n          </DropdownMenu>\n        </Dropdown>\n      );\n    }\n    if (typeof onSearch === 'function') {\n      _search = (\n        <button\n          type=\"button\"\n          className=\"header-search\"\n          onClick={onSearch}\n          data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-search-btn` : undefined}\n        >\n          <span className=\"material-icons\">search</span>\n        </button>\n      );\n    }\n\n    if (contact) {\n      _contact = isMobile ? (\n        <Dropdown\n          className=\"header-contact-dropdown\"\n          keepShown\n          data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-contact-dropdown` : undefined}\n        >\n          <DropdownButton\n            data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-contact-dropdown-btn` : undefined}\n          >\n            <span className=\"material-icons\">person</span>\n          </DropdownButton>\n          <DropdownMenu>\n            <a\n              data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-contact-link` : undefined}\n              key=\"header-contact\"\n              className=\"header-contact link_small\"\n              href={contact.href}\n            >\n              {contact.label}\n            </a>\n          </DropdownMenu>\n        </Dropdown>\n      ) : (\n        <a\n          data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-contact-link` : undefined}\n          key=\"header-contact\"\n          className=\"header-contact link_small\"\n          href={contact.href}\n        >\n          {contact.label}\n        </a>\n      );\n    }\n\n    if (isMobile) {\n      return (\n        <>\n          {_logo}\n          <div className=\"header-content\">\n            {_contact}\n            {_search}\n            <Dropdown\n              keepShown\n              className=\"header-items-dropdown\"\n              data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-items-dropdown` : undefined}\n            >\n              <DropdownButton\n                data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-items-dropdown-btn` : undefined}\n              >\n                <span className=\"material-icons\">menu</span>\n              </DropdownButton>\n              <DropdownMenu>\n                <div className=\"header-items\">{_items}</div>\n                {_languageSelector}\n              </DropdownMenu>\n            </Dropdown>\n          </div>\n        </>\n      );\n    } else if (_contact) {\n      return (\n        <>\n          <div className=\"header-top\">\n            {_contact}\n            {_languageSelector}\n          </div>\n          <div className=\"header-bottom\">\n            {_logo}\n            <div className=\"tab-list\">{_items}</div>\n            {_search}\n          </div>\n        </>\n      );\n    }\n    return (\n      <>\n        {_logo}\n        <div className=\"tab-list\">{_items}</div>\n        {_languageSelector}\n        {_search}\n      </>\n    );\n  };\n\n  return (\n    <div className={`header ${className || ''}`} style={contact && !isMobile ? {display: 'block'} : undefined} {...rest}>\n      {renderHeaderContent()}\n    </div>\n  );\n};\n\nexport default Header;\n","import {useEffect, useState} from 'react';\n\nexport interface IUseDevice {\n  isMobile: boolean;\n  isTablet: boolean;\n  isDesktop: boolean;\n}\n\n/**\n *\n * @internal\n */\nexport const useDevice = (): IUseDevice => {\n  const [isMobile, setIsMobile] = useState(false);\n  const [isTablet, setIsTablet] = useState(false);\n  const [isDesktop, setIsDesktop] = useState(false);\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth <= 672) {\n        setIsMobile(true);\n        setIsTablet(false);\n        setIsDesktop(false);\n      } else if (window.innerWidth <= 1024) {\n        setIsMobile(false);\n        setIsTablet(true);\n        setIsDesktop(false);\n      } else {\n        setIsMobile(false);\n        setIsTablet(false);\n        setIsDesktop(true);\n      }\n    };\n\n    handleResize();\n\n    return () => handleResize();\n  }, []);\n  return {isMobile, isTablet, isDesktop};\n};\n"],"names":["HeaderLogo","props","className","children","rest","__rest","_children","React","cloneElement","__assign","concat","OverflowMenu","_a","show","title","action","onClose","showCloseButton","onAction","parentRef","overflowRef","useRef","handleCloseOutsideOverflow","event","target","current","contains","useEffect","document","addEventListener","removeEventListener","_jsxs","ref","undefined","_jsx","onClick","type","TreeViewElement","name","disabled","_b","arrow","icon","_c","__read","useState","showChildren","setShowChildren","_Fragment","e","Children","toArray","map","_child","_idx","Tree","every","child","HeaderItem","id","selected","options","optionsDivider","showOptions","setShowOptions","buttonRef","onClickItem","stopPropagation","_opt","href","label","DropdownButton$1","memo","useDropdown","onToggleMenu","setDropdownButtonDimensions","showMenu","dropdownButtonRef","positionButton","getBoundingClientRect","width","height","DropdownMenu","setDropdownMenuDimensions","position","dropdownRef","handleClickMenu","positionMenu","content","style","root","getElementById","ReactDOM","createPortal","body","DropdownContext","createContext","Dropdown","onChangeToggleMenu","itemsDivider","forceRefresh","defaultShow","keepShown","placement","_d","setShowMenu","_e","refresh","setRefresh","_f","dropdownMenuDim","setDropdownMenuDim","_g","dropdownButtonDim","setDropdownButtonDim","handleClickOutside","getAttribute","prev","topStr","top","menuHeight","bottomStr","buttonHeight","rightStr","left","buttonWidth","leftStr","menuWidth","leftAlignment","rightAlignment","topAlignment","bottomAlignment","useMemo","dropdownMenuWidth","position_1","clientHeight","clientWidth","Provider","value","useContext","Header","_language","_logo","_items","_languageSelector","_search","_contact","languages","contact","onSearch","onClickLanguage","isMobile","setIsMobile","isTablet","setIsTablet","isDesktop","setIsDesktop","handleResize","window","innerWidth","useDevice","display","forEach","_childClone","key","length","push","find","_lang","DropdownButton","_idxLang"],"mappings":"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"}
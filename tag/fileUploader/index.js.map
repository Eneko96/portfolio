{"version":3,"file":"index.js","sources":["../../src/components/dragAndDrop/dragAndDrop.tsx","../../src/components/loader/loaderCircular.tsx","../../src/components/loader/loaderOval.tsx","../../src/components/loader/loader.tsx","../../src/components/fileUploader/fileUploader.tsx"],"sourcesContent":["import React, {useRef, useEffect} from 'react';\n\ninterface IDragAndDropProps {\n  disabled?: boolean;\n  handleDrop?: (e: any) => void;\n  onClick?: () => void;\n  className?: string;\n  [others: string]: any;\n}\n\nconst DragAndDrop: React.FC<IDragAndDropProps> = (props) => {\n  const {disabled, children, className, onClick, ...rest} = props;\n  const dropRef = useRef<HTMLDivElement>(null);\n\n  const handleDrag = (e: any) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const handleDragIn = (e: any) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const handleDragOut = (e: any) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const handleDrop = (e: any) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (!disabled && e?.dataTransfer?.files && e.dataTransfer.files.length > 0) {\n      if (typeof props.handleDrop === 'function') props.handleDrop(e.dataTransfer.files);\n      if (e?.dataTransfer?.items) {\n        e.dataTransfer.items.clear();\n      } else if (typeof e?.dataTransfer?.clearData === 'function') {\n        e.dataTransfer.clearData();\n      }\n    }\n  };\n\n  useEffect(() => {\n    const divRender = dropRef.current;\n    if (!divRender) return;\n    divRender.addEventListener('dragenter', handleDragIn);\n    divRender.addEventListener('dragleave', handleDragOut);\n    divRender.addEventListener('dragover', handleDrag);\n    divRender.addEventListener('drop', handleDrop);\n    return () => {\n      if (!divRender) return;\n      divRender.removeEventListener('dragenter', handleDragIn);\n      divRender.removeEventListener('dragleave', handleDragOut);\n      divRender.removeEventListener('dragover', handleDrag);\n      divRender.removeEventListener('drop', handleDrop);\n    };\n  });\n\n  return (\n    <div\n      data-testid={rest['data-testid'] ? rest['data-testid'] : undefined}\n      className={`drag-drop ${className}`}\n      style={{display: 'inline-block', position: 'relative', width: '100%'}}\n      ref={dropRef}\n      onClick={() => {\n        if (!disabled && typeof onClick === 'function') onClick();\n      }}\n    >\n      {children}\n    </div>\n  );\n};\nexport default DragAndDrop;\n","import React, {useRef, useEffect} from 'react';\nconst OFFSET_DEFAULT = 213;\n\ninterface ILoaderCircularProps {\n  percentage: number;\n  HasText: any;\n  error?: boolean;\n  success?: boolean;\n  className?: string;\n  [others: string]: any;\n}\n\nexport const LoaderCircular: React.FC<ILoaderCircularProps> = ({\n  percentage,\n  HasText,\n  error,\n  success,\n  className,\n  ...rest\n}) => {\n  const calcPercentage = (x: number) => (x / 100) * 87;\n  const ref = useRef<SVGPathElement>(null);\n  const divRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.style.animationDelay = '0';\n      ref.current.style.transition = 'stroke-dashoffset 0.2s linear';\n      ref.current.style.strokeDashoffset = `${calcPercentage(100 - percentage) + OFFSET_DEFAULT}`;\n\n      if (percentage === 100) {\n        if (divRef.current && ref.current) {\n          if (error) divRef.current.classList.add('error');\n          else if (success) divRef.current.classList.add('success');\n        }\n      }\n    }\n  }, [percentage, error, success]);\n\n  const getLoaderState = () => {\n    if (error) return 'error';\n    if (success) return 'success';\n    return '';\n  };\n\n  return (\n    <div\n      className={`loader-wrapper ${className || ''}`}\n      data-testid={rest && rest['data-testid'] ? rest['data-testid'] : undefined}\n    >\n      <div\n        ref={divRef}\n        className={`svg-container_circular ${getLoaderState()}`}\n        data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-svg-container` : undefined}\n      >\n        <svg\n          className=\"svg-content\"\n          width=\"32\"\n          height=\"32\"\n          viewBox=\"0 0 32 32\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            className=\"circle-svg\"\n            ref={ref}\n            d=\"M16 30C8.26801 30 2 23.732 2 16C2 8.26801 8.26801 2 16 2C23.732 2 30 8.26801 30 16C30 23.732 23.732 30 16 30Z\"\n            stroke=\"rgb(0, 154, 204)\"\n            strokeWidth=\"4\"\n          />\n        </svg>\n      </div>\n      {HasText}\n    </div>\n  );\n};\n","import React, {useEffect, useRef} from 'react';\nconst OFFSET_DEFAULT = 165;\n\ninterface ILoaderProps {\n  percentage: number;\n  HasText: any;\n  error?: boolean;\n  success?: boolean;\n  className?: string;\n  [others: string]: any;\n}\n\nexport const LoaderOval: React.FC<ILoaderProps> = ({percentage, HasText, error, success, className, ...rest}) => {\n  const ref = useRef<SVGPathElement>(null);\n  const divRef = useRef<HTMLDivElement>(null);\n  const calcPercentage = (x: number) => (x / 100) * 135;\n\n  useEffect(() => {\n    if (ref.current) {\n      ref.current.style.animationDelay = '0';\n      ref.current.style.transition = 'stroke-dashoffset 0.2s linear';\n      ref.current.style.strokeDashoffset = `${calcPercentage(100 - percentage) + OFFSET_DEFAULT}`;\n\n      if (percentage === 100) {\n        if (divRef.current && ref.current) {\n          if (error) divRef.current.classList.add('error');\n          else if (success) divRef.current.classList.add('success');\n        }\n      }\n    }\n  }, [percentage, error, success]);\n\n  const getLoaderState = () => {\n    if (percentage !== 100) {\n      if (error) return 'error';\n      if (success) return 'success';\n    }\n    return '';\n  };\n\n  return (\n    <div\n      className={`loader-wrapper ${className || ''}`}\n      data-testid={rest && rest['data-testid'] ? rest['data-testid'] : undefined}\n    >\n      <div\n        className={`svg-container ${getLoaderState()}`}\n        data-percentage={`${percentage}%`}\n        ref={divRef}\n        data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-svg-container` : undefined}\n      >\n        <svg\n          className=\"svg-content\"\n          width={divRef && divRef.current && divRef.current.style.width === '24px' ? '32' : '56'}\n          height=\"32\"\n          viewBox={divRef && divRef.current && divRef.current.style.width === '24px' ? '0 0 32 32' : '0 0 56 32'}\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            className=\"oval-svg\"\n            ref={ref}\n            d=\"M28 2H40C47.732 2 54 8.26801 54 16C54 23.732 47.732 30 40\n            30H28H16C8.26801 30 2 23.732 2 16C2 8.26801 8.26801 2 16 2H28Z\"\n            stroke=\"rgb(0, 154, 204)\"\n            strokeWidth=\"4\"\n            strokeLinecap=\"round\"\n          />\n        </svg>\n      </div>\n      {HasText}\n    </div>\n  );\n};\n","import React, {useEffect, useState} from 'react';\nimport {LoaderCircular} from './loaderCircular';\nimport {LoaderOval} from './loaderOval';\n\nexport interface ILoaderProps {\n  /**\n   * Apply different styles for Loader\n   */\n  className?: string;\n  /**\n   * Tells Loader that is in error state\n   */\n  error?: boolean;\n  /**\n   * Tells Loader that is in error state\n   */\n  success?: boolean;\n  /**\n   * Gives the Title text if needed\n   */\n  title?: string;\n  /**\n   * Gives the subtitle text if needed\n   */\n  subtitle?: string;\n  /**\n   * Set in case to need a  small loader\n   */\n  spinner?: boolean;\n  percentage?: {\n    show: boolean;\n    value?: number;\n  };\n  automatic?: boolean;\n  [others: string]: any;\n}\n\nconst Loader: React.FC<ILoaderProps> = ({\n  title,\n  subtitle,\n  spinner,\n  percentage = {value: 0, show: false},\n  error,\n  success,\n  automatic,\n  className,\n  ...rest\n}) => {\n  const [auxPercentage, setAuxPercentage] = useState<number | null>(automatic ? 0 : null);\n\n  useEffect(() => {\n    let interval: any;\n    if (automatic) {\n      interval = setInterval(() => {\n        setAuxPercentage((prev) => ((prev as number) < 100 ? (prev as number) + 5 : prev));\n      }, 250);\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  });\n\n  const HasText = () => {\n    if (title) {\n      return (\n        <div className=\"loader-text-wrapper\">\n          <span\n            className=\"loader-title\"\n            data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-title` : undefined}\n          >\n            {title}\n          </span>\n          {subtitle && (\n            <span\n              className=\"loader-subtitle\"\n              data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-subtitle` : undefined}\n            >\n              {subtitle}\n            </span>\n          )}\n        </div>\n      );\n    }\n    return null;\n  };\n\n  const renderLoader = () => {\n    if (spinner) {\n      if (title) {\n        return (\n          <div\n            className={`loader-wrapper ${className || ''}`}\n            data-testid={rest && rest['data-testid'] ? rest['data-testid'] : undefined}\n          >\n            <div\n              className=\"spinner\"\n              data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-spinner` : undefined}\n            />\n            <HasText />\n          </div>\n        );\n      }\n      return (\n        <div\n          className={`spinner ${className || ''}`}\n          data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-spinner` : undefined}\n        />\n      );\n    } else if (!percentage.show) {\n      return (\n        <LoaderCircular\n          className={className}\n          percentage={automatic ? (auxPercentage as number) : (percentage.value as number)}\n          HasText={<HasText />}\n          error={automatic ? (auxPercentage as number) >= 95 && error : error}\n          success={automatic ? (auxPercentage as number) >= 95 && success : success}\n          data-testid={rest && rest['data-testid'] ? rest['data-testid'] : null}\n        />\n      );\n    }\n    return (\n      <LoaderOval\n        className={className}\n        percentage={automatic ? (auxPercentage as number) : (percentage.value as number)}\n        HasText={<HasText />}\n        error={automatic ? (auxPercentage as number) >= 95 && error : error}\n        success={automatic ? (auxPercentage as number) >= 95 && success : success}\n        data-testid={rest && rest['data-testid'] ? rest['data-testid'] : null}\n      />\n    );\n  };\n  return renderLoader();\n};\n\nexport default Loader;\n","import React, {MutableRefObject, useRef, useState, useEffect} from 'react';\nimport DragAndDrop from '../dragAndDrop/dragAndDrop';\nimport Loader from '../loader/loader';\n\nexport interface IFileUploaderProps {\n  /**\n   * Define full width in the parent for component\n   */\n  fullWidth?: boolean;\n  /**\n   * Define the size for button\n   */\n  small?: boolean;\n  /**\n   * Define if button is secondary\n   */\n  secondary?: boolean;\n  /**\n   * Define if is possible to upload one or more files\n   */\n  multiple?: boolean;\n  /**\n   * Define if is drag and drop variable\n   */\n  dragAndDrop?: boolean;\n  /**\n   * Define if is disabled\n   */\n  disabled?: boolean;\n  /**\n   * Set id for input\n   */\n  id?: string;\n  /**\n   * Set label for component\n   */\n  label?: string;\n  /**\n   * Set different classes for file uploader component\n   */\n  className?: string;\n  /**\n   * Set accept formats for file or files\n   */\n  formats: string;\n  /**\n   * Set max size of file in MB, only for show in the info message\n   */\n  max: number;\n  /**\n   * Define the value of file or files in component\n   */\n  value?: IFile | IFile[];\n  /**\n   * Function to call when files is changed\n   */\n  onChange: (files?: File[]) => void;\n  [others: string]: any;\n}\n\nexport interface IFile {\n  file: File;\n  loading?: boolean;\n  error?: string;\n}\n\nconst FileUploader: React.FC<IFileUploaderProps> = (props: IFileUploaderProps) => {\n  const {\n    small,\n    secondary,\n    multiple,\n    dragAndDrop,\n    fullWidth,\n    id,\n    label,\n    className,\n    formats,\n    max,\n    disabled,\n    value,\n    onChange,\n    ...rest\n  } = props;\n\n  const [valueState, setValueState] = useState<IFile | IFile[] | undefined>(value ? value : undefined);\n  const fileInputRef: MutableRefObject<any> = useRef(null);\n\n  useEffect(() => {\n    if (multiple && (value as IFile[])?.length > 0) {\n      setValueState(value as IFile[]);\n    } else if (value) {\n      setValueState(value as IFile);\n    }\n  }, [value, multiple]);\n\n  const onChangeInput = async (e: any) => {\n    if (e.target.files && e.target.files.length > 0) {\n      const _newFiles: File[] = Array.from(e.target.files);\n      if (multiple && (valueState as IFile[])?.length > 0) {\n        let _newFilesMultiple = (valueState as IFile[]).map((_valSt: IFile) => _valSt.file);\n        _newFilesMultiple = _newFilesMultiple.concat(_newFiles);\n        onChange(_newFilesMultiple);\n      } else {\n        onChange(_newFiles);\n      }\n    }\n  };\n\n  const onDeleteFile = (indexFile: number) => {\n    if (multiple && (valueState as IFile[]).length > 0) {\n      const _valuesToDelete = (valueState as IFile[]).map((val: IFile) => val.file);\n      _valuesToDelete.splice(indexFile, 1);\n      onChange(_valuesToDelete);\n    }\n  };\n\n  const handleDrop = (files: any) => {\n    if (files && files.length > 0) {\n      const _newFiles: File[] = Array.from(files);\n      if (multiple && (valueState as IFile[])?.length > 0) {\n        let _newFilesMultiple = (valueState as IFile[]).map((_valSt: IFile) => _valSt.file);\n        _newFilesMultiple = _newFilesMultiple.concat(_newFiles);\n        onChange(_newFilesMultiple);\n      } else {\n        onChange(_newFiles);\n      }\n    }\n  };\n\n  const onClickShowLoadFromPc = () => {\n    if (fileInputRef && fileInputRef.current) fileInputRef.current.click();\n  };\n\n  const renderDragAndDrop = () => {\n    return (\n      <DragAndDrop\n        data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-drag-and-drop` : ''}\n        className=\"file-uploader-drag-and-drop\"\n        disabled={disabled}\n        handleDrop={handleDrop}\n        onClick={onClickShowLoadFromPc}\n      >\n        <span>Click or drag-and-drop files here to upload</span>\n      </DragAndDrop>\n    );\n  };\n\n  const renderFiles = () => {\n    if (multiple && (valueState as IFile[]) && (valueState as IFile[]).length > 0) {\n      const _valuesRender = valueState as IFile[];\n      return _valuesRender.map(\n        (_valueRender: IFile, index: number) =>\n          _valueRender && (\n            <div className=\"file-uploader-file-container\" key={`file-${index}`}>\n              <div className={`file-uploader-file${_valueRender.error ? '_error' : ''}`}>\n                <span className=\"file-uploader-file-name\">{_valueRender.file.name}</span>\n                {_valueRender.loading ? (\n                  <Loader spinner />\n                ) : (\n                  <>\n                    {_valueRender.error && <span className=\"material-icons error\">error</span>}\n                    <button\n                      type=\"button\"\n                      data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-file-${index}-delete-btn` : ''}\n                      onClick={() => onDeleteFile(index)}\n                      disabled={disabled}\n                    >\n                      <span className=\"material-icons cancel\">cancel</span>\n                    </button>\n                  </>\n                )}\n              </div>\n              {_valueRender.error && <small className=\"mt1\">{_valueRender.error}</small>}\n            </div>\n          )\n      );\n    }\n    return (\n      valueState && (\n        <div className=\"file-uploader-file-container\">\n          <div className={`file-uploader-file${(valueState as IFile).error ? '_error' : ''}`}>\n            <span className=\"file-uploader-file-name\">{(valueState as IFile).file.name}</span>{' '}\n            {(valueState as IFile).loading ? (\n              <Loader spinner />\n            ) : (valueState as IFile).error ? (\n              <span className=\"material-icons error\">error</span>\n            ) : (\n              <span className=\"material-icons check\">check_circle</span>\n            )}\n          </div>\n          {(valueState as IFile).error && <small>{(valueState as IFile).error}</small>}\n        </div>\n      )\n    );\n  };\n\n  const _dragAndDropModifier = dragAndDrop ? '_drag-drop' : '';\n  const _smallModifier = small ? '_small' : '';\n  const _fullWidthModifier = fullWidth ? '_full' : '';\n  const _disabledModifier = disabled ? '_disabled' : '';\n\n  return (\n    <div\n      className={`file-uploader-wrapper${_dragAndDropModifier || _smallModifier}${_fullWidthModifier}${_disabledModifier} ${\n        className || ''\n      }`}\n    >\n      {label && (\n        <label className={`caption mb1 ${disabled ? 'disabled' : ''}`} htmlFor={id}>\n          {label}\n        </label>\n      )}\n\n      {dragAndDrop ? (\n        renderDragAndDrop()\n      ) : (\n        <button\n          type=\"button\"\n          data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-upload-btn` : undefined}\n          className={`${secondary ? 'button-secondary' : 'button-primary'}${small ? '_small' : '_large'}`}\n          onClick={onClickShowLoadFromPc}\n          disabled={disabled}\n        >\n          Add files\n          <span className=\"material-icons right\">file_upload</span>\n        </button>\n      )}\n\n      <small className={`file-uploader-helper-text ${disabled ? 'disabled' : ''}`}>\n        Max file size is {max}MB. Only {formats}\n      </small>\n      <input\n        id={id}\n        data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-input` : undefined}\n        ref={fileInputRef}\n        type=\"file\"\n        onChange={onChangeInput}\n        accept={formats}\n        disabled={disabled}\n        multiple={multiple}\n      />\n      {((!multiple && value) || (multiple && value && (value as IFile[]).length > 0)) && (\n        <div className=\"file-uploader-files-container mt2\">{renderFiles()}</div>\n      )}\n    </div>\n  );\n};\n\nexport default FileUploader;\n"],"names":["DragAndDrop","props","disabled","children","className","onClick","rest","__rest","dropRef","useRef","handleDrag","e","preventDefault","stopPropagation","handleDragIn","handleDragOut","handleDrop","_a","dataTransfer","files","length","_b","items","clear","_c","clearData","useEffect","divRender","current","addEventListener","removeEventListener","_jsx","undefined","concat","style","display","position","width","ref","LoaderCircular","percentage","HasText","error","success","divRef","animationDelay","transition","strokeDashoffset","classList","add","_jsxs","jsxs","__assign","jsx","height","viewBox","fill","xmlns","d","stroke","strokeWidth","LoaderOval","getLoaderState","strokeLinecap","Loader","title","subtitle","spinner","value","show","automatic","__read","useState","auxPercentage","setAuxPercentage","interval","setInterval","prev","clearInterval","small","secondary","multiple","dragAndDrop","fullWidth","id","label","formats","max","onChange","valueState","setValueState","fileInputRef","_newFiles","Array","from","_newFilesMultiple","map","_valSt","file","onClickShowLoadFromPc","click","_dragAndDropModifier","_smallModifier","_fullWidthModifier","_disabledModifier","htmlFor","type","__awaiter","target","accept","_valueRender","index","name","loading","_Fragment","Fragment","indexFile","_valuesToDelete","val","splice","onDeleteFile"],"mappings":"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"}
{"version":3,"file":"index.esm.js","sources":["../../src/hooks/useDevice/useDevice.tsx","../../src/components/avatar/avatar.tsx","../../src/components/badge/badge.tsx"],"sourcesContent":["import {useEffect, useState} from 'react';\n\nexport interface IUseDevice {\n  isMobile: boolean;\n  isTablet: boolean;\n  isDesktop: boolean;\n}\n\n/**\n *\n * @internal\n */\nexport const useDevice = (): IUseDevice => {\n  const [isMobile, setIsMobile] = useState(false);\n  const [isTablet, setIsTablet] = useState(false);\n  const [isDesktop, setIsDesktop] = useState(false);\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth <= 672) {\n        setIsMobile(true);\n        setIsTablet(false);\n        setIsDesktop(false);\n      } else if (window.innerWidth <= 1024) {\n        setIsMobile(false);\n        setIsTablet(true);\n        setIsDesktop(false);\n      } else {\n        setIsMobile(false);\n        setIsTablet(false);\n        setIsDesktop(true);\n      }\n    };\n\n    handleResize();\n\n    return () => handleResize();\n  }, []);\n  return {isMobile, isTablet, isDesktop};\n};\n","import React from 'react';\nimport Badge from '../badge/badge';\nexport enum AvatarSize {\n  small = 'small',\n  xsmall = 'xsmall',\n  big = 'big',\n}\n\nexport interface IAvatarProps {\n  /**\n   * Title of avatar image\n   */\n  title?: string;\n  /**\n   * Subtitle of avatar image\n   */\n  subtitle?: string;\n\n  /**\n   * Set the xsmall size\n   */\n  xsmall?: boolean;\n  /**\n   * Set the small size\n   */\n  small?: boolean;\n  /**\n   * Set the big size\n   */\n  big?: boolean;\n\n  /**\n   * Set if Avatar is disabled\n   */\n  disabled?: boolean;\n  /**\n   * Function that will ocurred when user click on avatar image\n   */\n  onClick?: () => void;\n  badge?: number | string;\n  /**\n   * Additional or alternative styling\n   */\n  className?: string;\n\n  [others: string]: any;\n}\n\nconst Avatar: React.FC<IAvatarProps> = (props) => {\n  const {xsmall, small, big, disabled, title, subtitle, badge, className, children, onClick, ...rest} = props;\n\n  const getSize = () => {\n    if (xsmall) {\n      return AvatarSize.xsmall;\n    }\n    if (small) {\n      return AvatarSize.small;\n    }\n    if (big) {\n      return AvatarSize.big;\n    }\n    return undefined;\n  };\n\n  const renderAvatarWrapper = () => {\n    const avatar = badge ? (\n      <div className=\"avatar-container\">\n        {renderAvatar()}\n        {xsmall ? <Badge /> : <Badge>{badge}</Badge>}\n      </div>\n    ) : (\n      <>{renderAvatar()}</>\n    );\n\n    if (title) {\n      if (subtitle) {\n        return (\n          <>\n            {avatar}\n            <div className=\"avatar-text-wrapper\">\n              <span className=\"avatar-title\">{title}</span>\n              <span className=\"avatar-subtitle\">{subtitle}</span>\n            </div>\n          </>\n        );\n      }\n      return (\n        <>\n          {avatar}\n          <span className=\"avatar-title\">{title}</span>\n        </>\n      );\n    }\n\n    return avatar;\n  };\n\n  const renderAvatar = () => {\n    if (children) {\n      const _child = children as any;\n      const _sizeStr = getSize() ? `_${getSize()}` : '';\n\n      if (typeof onClick === 'function') {\n        return (\n          <button type=\"button\" className={`avatar${_sizeStr}`} onClick={rest.onClick}>\n            {_child}\n          </button>\n        );\n      }\n      return React.cloneElement(_child, {\n        ..._child.props,\n        className: `avatar${_sizeStr} ${_child.props.className || ''}`,\n      });\n    }\n  };\n\n  return (\n    <div className={`avatar-wrapper${disabled ? '_disabled' : ''} ${className || ''}`} {...rest}>\n      {renderAvatarWrapper()}\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\nimport {useDevice} from '../../hooks/useDevice/useDevice';\n\nexport interface IBadgeProps {\n  /**\n   * Set error variant in badge\n   */\n  error?: boolean;\n  /**\n   * Set success variant in badge\n   */\n  success?: boolean;\n  /**\n   * Set small variant in badge\n   */\n  small?: boolean;\n  /**\n   * Additional or alternative styling\n   */\n  className?: string;\n\n  [others: string]: any;\n}\n\nconst Badge: React.FC<IBadgeProps> = (props) => {\n  const {children, error, success, small, className, ...rest} = props;\n  const {isMobile} = useDevice();\n  return children ? (\n    <span\n      className={`badge${small || isMobile ? '_small' : ''}${error ? '_error' : ''}${success ? '_success' : ''} ${\n        className || ''\n      }`}\n      {...rest}\n    >\n      {children}\n    </span>\n  ) : (\n    <span className={`badge_empty ${className || ''}`} {...rest} />\n  );\n};\n\nexport default Badge;\n"],"names":["AvatarSize","Badge","props","children","error","success","small","className","rest","__rest","isMobile","_a","__read","useState","setIsMobile","_b","isTablet","setIsTablet","_c","isDesktop","setIsDesktop","useEffect","handleResize","window","innerWidth","useDevice","_jsx","__assign","concat","Avatar","avatar","xsmall","big","disabled","title","subtitle","badge","onClick","getSize","renderAvatar","_child","_sizeStr","type","React","cloneElement","_jsxs","_Fragment"],"mappings":"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"}
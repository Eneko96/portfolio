{"version":3,"file":"index.esm.js","sources":["../../src/components/dropdown/dropdownButton.tsx","../../src/components/dropdown/dropdownMenu.tsx","../../src/components/dropdown/dropdown.tsx","../../src/components/card/cardHeader.tsx","../../src/components/dragAndDropCard/dragAndDropCard.tsx"],"sourcesContent":["import React, {useEffect} from 'react';\nimport {useDropdown} from './dropdown';\nexport interface DropdownButtonProps {\n  className?: string;\n  disabled?: boolean;\n  children: React.ReactNode;\n\n  [others: string]: any;\n}\n\nconst DropdownButton: React.FC<DropdownButtonProps> = ({children, className, disabled, ...rest}) => {\n  const {onToggleMenu, setDropdownButtonDimensions, showMenu} = useDropdown();\n  const dropdownButtonRef = React.useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (dropdownButtonRef && dropdownButtonRef.current) {\n      const positionButton = dropdownButtonRef.current.getBoundingClientRect();\n      if (positionButton) setDropdownButtonDimensions({width: positionButton.width, height: positionButton.height});\n    }\n  }, [showMenu]);\n  return (\n    <div\n      className={`dropdown-button${disabled ? '_disabled' : ''} ${className || ''}`}\n      onClick={onToggleMenu}\n      ref={dropdownButtonRef}\n      {...rest}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default React.memo(DropdownButton);\n","import React, {useEffect} from 'react';\nimport ReactDOM from 'react-dom';\nimport {useDropdown} from './dropdown';\n\nexport interface DropdownMenuProps {\n  className?: string;\n  [others: string]: any;\n}\n\nconst DropdownMenu: React.FC<DropdownMenuProps> = ({className, children, ...rest}) => {\n  const ref = React.useRef<HTMLDivElement>(null);\n  const {showMenu, setDropdownMenuDimensions, position, dropdownRef, handleClickMenu} = useDropdown();\n\n  useEffect(() => {\n    if (ref && ref.current) {\n      const positionMenu = ref.current.getBoundingClientRect();\n      if (positionMenu)\n        setDropdownMenuDimensions({\n          width: positionMenu.width,\n          height: positionMenu.height,\n        });\n    }\n  }, [showMenu]);\n\n  const content = (\n    <div\n      ref={ref}\n      className={`dropdown-menu ${showMenu ? '' : 'hidden'} ${className || ''}`}\n      style={position}\n      onClick={handleClickMenu}\n      {...rest}\n    >\n      {children}\n    </div>\n  );\n  if (dropdownRef && dropdownRef.current) {\n    const root = document.getElementById('root');\n    return ReactDOM.createPortal(content, dropdownRef.current || root || document.body);\n  }\n  return null;\n};\n\nexport default DropdownMenu;\n","import React, {useContext, useEffect, useMemo, useRef, useState} from 'react';\n\nexport {default as DropdownButton} from './dropdownButton';\nexport {default as DropdownMenu} from './dropdownMenu';\nconst DropdownContext = React.createContext({});\ntype DropdownPosition = 'top' | 'bottom' | 'right' | 'left';\ninterface DropdownProps {\n  className?: string;\n  onChangeToggleMenu?: (state: boolean) => void;\n  itemsDivider?: boolean;\n  forceRefresh?: number;\n  defaultShow?: boolean;\n  keepShown?: boolean;\n  placement?: DropdownPosition;\n  [others: string]: any;\n}\n\ninterface IDropdownContext {\n  showMenu: boolean;\n  setDropdownMenuDimensions: (dimensions: {width: number; height: number}) => void;\n  setDropdownButtonDimensions: (dimensions: {width: number; height: number}) => void;\n  handleClickMenu: (e: React.MouseEvent<HTMLDivElement>) => void;\n  position: {left: string; top: string};\n  itemsDivider: boolean;\n  dropdownRef: React.RefObject<HTMLDivElement>;\n  onToggleMenu: () => void;\n}\n\nconst Dropdown: React.FC<DropdownProps> = ({\n  children,\n  className,\n  onChangeToggleMenu,\n  itemsDivider,\n  forceRefresh,\n  defaultShow,\n  keepShown = false,\n  placement = 'bottom',\n  ...rest\n}) => {\n  const [showMenu, setShowMenu] = useState(false);\n  const [refresh, setRefresh] = useState(forceRefresh ? forceRefresh : 0);\n  const [dropdownMenuDim, setDropdownMenuDim] = useState({width: 0, height: 0});\n  const [dropdownButtonDim, setDropdownButtonDim] = useState({width: 0, height: 0});\n\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    if (defaultShow !== undefined && defaultShow !== showMenu) {\n      setShowMenu(defaultShow as boolean);\n    }\n  }, [defaultShow]);\n\n  useEffect(() => {\n    if (forceRefresh && refresh !== forceRefresh) setRefresh(forceRefresh);\n  }, [forceRefresh, refresh]);\n\n  const onToggleMenu = () => {\n    setShowMenu((prev) => {\n      if (typeof onChangeToggleMenu === 'function') onChangeToggleMenu(!prev);\n      return !prev;\n    });\n  };\n\n  const handleClickOutside = (event: MouseEvent) => {\n    if (event && event.target) {\n      if (\n        dropdownRef &&\n        dropdownRef.current &&\n        dropdownRef.current.getAttribute('data-show') === 'true' &&\n        !dropdownRef.current.contains(event.target as Node)\n      ) {\n        setShowMenu(false);\n        if (typeof onChangeToggleMenu === 'function') onChangeToggleMenu(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    document.addEventListener('scroll', () => setRefresh((prev) => prev++));\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n      document.removeEventListener('scroll', () => setRefresh((prev) => prev++));\n    };\n  }, []);\n\n  const topStr = (top: number, menuHeight: number) => `calc(${top}px - ${menuHeight}px - var(--unit))`;\n  const bottomStr = (top: number, buttonHeight: number) => `calc(${top}px + ${buttonHeight}px + var(--unit))`;\n  const rightStr = (left: number, buttonWidth: number) => `calc(${left}px + ${buttonWidth}px + var(--unit))`;\n  const leftStr = (left: number, menuWidth: number) => `calc(${left}px - ${menuWidth}px - var(--unit))`;\n  const leftAlignment = (left: number) => `${left}px`;\n  const rightAlignment = (left: number, menuWidth: number, buttonWidth: number) =>\n    `calc(${left}px + ${buttonWidth}px - ${menuWidth}px)`;\n  const topAlignment = (top: number) => `${top}px`;\n  const bottomAlignment = (top: number, menuHeight: number, buttonHeight: number) =>\n    `calc(${top}px + ${buttonHeight}px - ${menuHeight}px)`;\n\n  const position = useMemo(() => {\n    let left,\n      top = '',\n      dropdownMenuWidth = 0;\n\n    if (dropdownRef && dropdownRef.current) {\n      const position = dropdownRef.current.getBoundingClientRect();\n      dropdownMenuWidth = dropdownMenuDim.width < dropdownButtonDim.width ? dropdownButtonDim.width : dropdownMenuDim.width;\n      const {clientHeight, clientWidth} = document.body;\n      switch (placement) {\n        case 'top':\n          if (position.top - dropdownMenuDim.height - 8 < 0) {\n            top = bottomStr(position.top, dropdownButtonDim.height);\n          } else {\n            top = topStr(position.top, dropdownMenuDim.height);\n          }\n          if (position.left + dropdownMenuWidth > clientWidth) {\n            left = rightAlignment(position.left, dropdownMenuWidth, dropdownButtonDim.width);\n          } else {\n            left = leftAlignment(position.left);\n          }\n          break;\n        case 'right':\n          if (position.left + dropdownMenuWidth + 8 > clientWidth) {\n            left = leftStr(position.left, dropdownMenuWidth);\n          } else {\n            left = rightStr(position.left, dropdownButtonDim.width);\n          }\n          if (position.top + dropdownMenuDim.height > clientHeight) {\n            top = bottomAlignment(position.top, dropdownMenuDim.height, dropdownButtonDim.height);\n          } else {\n            top = topAlignment(position.top);\n          }\n          break;\n        case 'bottom':\n          if (position.top + dropdownMenuDim.height + 8 > clientHeight) {\n            top = topStr(position.top, dropdownMenuDim.height);\n          } else {\n            top = bottomStr(position.top, dropdownButtonDim.height);\n          }\n          if (position.left + dropdownMenuWidth > clientWidth) {\n            left = rightAlignment(position.left, dropdownMenuWidth, dropdownButtonDim.width);\n          } else {\n            left = leftAlignment(position.left);\n          }\n          break;\n        case 'left':\n          if (position.left - dropdownMenuWidth - 8 < 0) {\n            left = rightStr(position.left, dropdownButtonDim.width);\n          } else {\n            left = leftStr(position.left, dropdownMenuWidth);\n          }\n          if (position.top + dropdownMenuDim.height > clientHeight) {\n            top = bottomAlignment(position.top, dropdownMenuDim.height, dropdownButtonDim.height);\n          } else {\n            top = topAlignment(position.top);\n          }\n          break;\n      }\n    }\n    return {left, top, width: `${dropdownMenuWidth}px`};\n  }, [dropdownMenuDim, dropdownButtonDim]);\n\n  const handleClickMenu = () => {\n    if (!keepShown) {\n      setShowMenu(false);\n      if (typeof onChangeToggleMenu === 'function') onChangeToggleMenu(false);\n    }\n  };\n\n  return (\n    <DropdownContext.Provider\n      value={{\n        showMenu,\n        setDropdownMenuDimensions: setDropdownMenuDim,\n        setDropdownButtonDimensions: setDropdownButtonDim,\n        handleClickMenu,\n        itemsDivider,\n        dropdownRef,\n        onChangeToggleMenu,\n        onToggleMenu,\n        position,\n      }}\n    >\n      <div ref={dropdownRef} className={`dropdown ${className || ''}`} data-show={showMenu} {...rest}>\n        {children}\n      </div>\n    </DropdownContext.Provider>\n  );\n};\n\nexport default Dropdown;\n/**\n *\n * @internal\n */\nexport const useDropdown = () => useContext(DropdownContext) as IDropdownContext;\n","import React from 'react';\n\nexport interface ICardHeaderProps {\n  /**\n   * Identifies the accordion item\n   */\n  id?: string;\n  /**\n   * Add class to accordion\n   */\n  className?: string;\n  [others: string]: any;\n}\n\nconst CardHeader: React.FC<ICardHeaderProps> = (props) => {\n  const {id, children, className, ...rest} = props;\n\n  return (\n    <div id={id || ''} className={`card-header ${className || ''}`} {...rest}>\n      {children}\n    </div>\n  );\n};\n\nexport default CardHeader;\n","import React, {useState} from 'react';\nimport Dropdown, {DropdownButton, DropdownMenu} from '../dropdown/dropdown';\n\nimport DragAndDropCardHeader from '../card/cardHeader';\n\nexport {default as DragAndDropCardHeader} from '../card/cardHeader';\n\nexport interface IDragAndDropCardProps {\n  /**\n   * Identifies the card\n   */\n  id?: string;\n  /**\n   * Add class to card\n   */\n  className?: string;\n  /**\n   * Add options for dropdown option\n   */\n  options?: {id?: string; label: string; onClick?: () => void; [others: string]: any}[];\n  /**\n   * Set placeholder type\n   */\n  placeholder?: boolean;\n  /**\n   * Set completed styles\n   */\n  completed?: boolean;\n  /**\n   * Set draggable option\n   */\n  draggable?: boolean;\n  /**\n   * Set active option\n   */\n  active?: boolean;\n  /**\n   * Set header of card\n   */\n  children: React.ReactElement<typeof DragAndDropCardHeader>;\n\n  [others: string]: any;\n}\n\nconst DragAndDropCard: React.FC<IDragAndDropCardProps> = (props) => {\n  const {id, children, className, options, placeholder, completed, draggable, active, ...rest} = props;\n  const [showMenu, setShowMenu] = useState(false);\n\n  const renderDragAndDropVariant = () => {\n    if (options && options.length > 0 && draggable) {\n      return (\n        <div\n          id={id || ''}\n          className={`card_drag-drop${completed ? '_completed' : ''} ${active ? 'active' : ''} ${className || ''}`}\n          draggable\n          onMouseEnter={() => setShowMenu(true)}\n          onMouseLeave={() => setShowMenu(false)}\n          {...rest}\n        >\n          {children}\n          <Dropdown defaultShow={showMenu} onChangeToggleMenu={setShowMenu}>\n            <DropdownButton data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-dropdown-btn` : undefined}>\n              <span className=\"material-icons\">more_vert</span>\n            </DropdownButton>\n            <DropdownMenu>\n              <ul>\n                {options &&\n                  options.map((_option: {label: string; onClick?: () => void; [others: string]: any}, index: number) => {\n                    const {label, onClick, id, ...others} = _option;\n                    return (\n                      <li\n                        id={id || `option-card-${index}`}\n                        key={id || `option-card-${index}`}\n                        className=\"dropdown-item\"\n                        onClick={() => {\n                          if (typeof onClick === 'function') onClick();\n                        }}\n                        data-testid={\n                          rest && rest['data-testid'] ? `${rest['data-testid']}-dropdown-item-${index}` : undefined\n                        }\n                        {...others}\n                      >\n                        {label}\n                      </li>\n                    );\n                  })}\n              </ul>\n            </DropdownMenu>\n          </Dropdown>\n        </div>\n      );\n    }\n\n    if (placeholder) {\n      return (\n        <div id={id || ''} className={`card_drag-drop_placeholder ${className || ''}`} {...rest}>\n          {children}\n        </div>\n      );\n    }\n    if (options && options.length > 0) {\n      return (\n        <div id={id || ''} className={`card_drag-drop_dropdown ${className || ''}`} {...rest}>\n          <Dropdown onChangeToggleMenu={setShowMenu}>\n            <DropdownButton data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-dropdown-btn` : undefined}>\n              {children}\n              <span className=\"material-icons\">{showMenu ? 'arrow_drop_up' : 'arrow_drop_down'}</span>\n            </DropdownButton>\n            <DropdownMenu style={{top: 'inherit', left: 'inherit'}}>\n              <ul>\n                {options &&\n                  options.map((_option: {label: string; onClick?: () => void}, index: number) => (\n                    <li\n                      key={`option-card-${index}`}\n                      className=\"dropdown-item\"\n                      onClick={() => {\n                        if (typeof _option.onClick === 'function') _option.onClick();\n                      }}\n                      data-testid={rest && rest['data-testid'] ? `${rest['data-testid']}-dropdown-item-${index}` : undefined}\n                    >\n                      {_option.label}\n                    </li>\n                  ))}\n              </ul>\n            </DropdownMenu>\n          </Dropdown>\n        </div>\n      );\n    }\n    return (\n      <div\n        id={id || ''}\n        className={`card_drag-drop${completed ? '_completed' : ''} ${active ? 'active' : ''} ${className || ''}`}\n        draggable={draggable}\n        {...rest}\n      >\n        {children}\n      </div>\n    );\n  };\n  return renderDragAndDropVariant();\n};\n\nexport default DragAndDropCard;\n"],"names":["DropdownButton$1","React","memo","_a","children","className","disabled","rest","__rest","_b","useDropdown","onToggleMenu","setDropdownButtonDimensions","showMenu","dropdownButtonRef","useRef","useEffect","current","positionButton","getBoundingClientRect","width","height","_jsx","__assign","concat","onClick","ref","DropdownMenu","setDropdownMenuDimensions","position","dropdownRef","handleClickMenu","positionMenu","content","style","root","document","getElementById","ReactDOM","createPortal","body","DropdownContext","createContext","Dropdown","onChangeToggleMenu","itemsDivider","forceRefresh","defaultShow","keepShown","_c","placement","_d","__read","useState","setShowMenu","_e","refresh","setRefresh","_f","dropdownMenuDim","setDropdownMenuDim","_g","dropdownButtonDim","setDropdownButtonDim","undefined","handleClickOutside","event","target","getAttribute","contains","addEventListener","prev","removeEventListener","topStr","top","menuHeight","bottomStr","buttonHeight","rightStr","left","buttonWidth","leftStr","menuWidth","leftAlignment","rightAlignment","topAlignment","bottomAlignment","useMemo","dropdownMenuWidth","position_1","clientHeight","clientWidth","Provider","value","useContext","CardHeader","props","id","DragAndDropCard","options","placeholder","completed","draggable","active","length","_jsxs","onMouseEnter","onMouseLeave","DropdownButton","map","_option","index","label","others"],"mappings":"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"}
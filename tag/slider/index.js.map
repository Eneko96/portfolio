{"version":3,"file":"index.js","sources":["../../src/components/slider/slider.tsx"],"sourcesContent":["import React, {useCallback, useEffect, useRef, useState} from 'react';\n\ninterface TTProps {\n  min: string | number;\n  max: string | number;\n}\ninterface DefProps {\n  min: number;\n  max: number;\n}\n\ninterface ISlider {\n  /**\n   * Maximum bound for the slider\n   */\n  max?: number;\n  /**\n   * Minimum bound for the slider\n   */\n  min?: number;\n  /**\n   * Default value set before initialization, for single slider --> number, for double --> { min: number, max: number }\n   */\n  defaultValue?: DefProps | number;\n  /**\n   * Boolean set for telling our component to have 2 sliders on the range\n   */\n  double?: boolean;\n  /**\n   * Setter for disabled state of the slider\n   */\n  disabled?: boolean;\n  /**\n   * Object containing the left and right labels\n   */\n  label?: {\n    left: string | number;\n    right: string | number;\n  };\n  /**\n   * Boolean for telling the component that we want it to have a tooltip\n   */\n  tooltip?: boolean;\n  /**\n   * When set, this function will tell the parent in what state the slider/sliders are\n   */\n  onChange?: (...values: any) => void;\n  /**\n   * Having a tooltip, We'll can tell the component whether it has a single or double slider\n   * `single --> tooltip: 'Text'`\n   * `double --> { min: 'Text', max: 'Text' }`\n   */\n  tooltipText?: TTProps | string | number;\n  /**\n   * Set to true to add the number progression of the track below\n   */\n  withValueTrack?: boolean;\n  className?: string;\n  [others: string]: any;\n}\n\nenum Bubbles {\n  bb1 = 0,\n  bb2 = 1,\n}\n\nconst Slider: React.FC<ISlider> = (props) => {\n  const {\n    disabled,\n    tooltip,\n    defaultValue = 0,\n    tooltipText,\n    min = 0,\n    max = 100,\n    label,\n    double,\n    onChange,\n    className,\n    withValueTrack,\n    ...rest\n  } = props;\n  const rangeRef = useRef<HTMLDivElement>(null);\n  const maxValRef = useRef<HTMLInputElement>(null);\n  const bubbleRef = useRef<HTMLDivElement>(null);\n  const [maxVal, setMaxVal] = useState<number>(defaultValue as number);\n\n  useEffect(() => {\n    if (maxValRef.current) {\n      setValue();\n      const currentRef = maxValRef.current;\n      currentRef.addEventListener('keydown', (e) => {\n        if (document.activeElement === currentRef) {\n          if (e.shiftKey) {\n            e.preventDefault();\n            if (e.key === 'ArrowUp') {\n              setMaxVal((prev: number) => {\n                if (prev + 5 < max) {\n                  currentRef.value = (prev + 5).toString();\n                  return prev + 5;\n                }\n                return prev;\n              });\n            }\n            if (e.key === 'ArrowDown') {\n              setMaxVal((prev: number) => {\n                if (prev - 5 > min) {\n                  currentRef.value = (prev - 5).toString();\n                  return prev - 5;\n                }\n                return prev;\n              });\n            }\n          }\n        }\n      });\n    }\n  }, []);\n\n  const getPercent = useCallback((value: number) => Math.round(((value - min) / (max - min)) * 100), [min, max]);\n\n  useEffect(() => {\n    if (maxValRef.current) {\n      const minPercent = getPercent(min);\n      const maxPercent = getPercent(maxVal);\n\n      if (rangeRef.current) {\n        rangeRef.current.style.width = `calc(${maxPercent - minPercent}% ${\n          maxPercent - minPercent < 50 && maxPercent < 50 ? '+ var(--unit) - 1%' : '- 1%'\n        })`;\n      }\n    }\n  }, [min, maxVal, getPercent]);\n\n  const setValue = () => {\n    if (bubbleRef?.current && maxValRef?.current) {\n      const val = maxValRef.current.value;\n      const newVal = Number(((+val - min) * 100) / (max - min));\n      bubbleRef.current.style.left = `calc(${newVal}% + (${12 - newVal * 0.26}px))`;\n    }\n  };\n\n  if (double) return <DoubleSlider {...props} />;\n\n  return (\n    <div className={`slider-wrapper ${className || ''}`}>\n      <div {...rest} className={`slider-input-container${disabled ? '_disabled' : ''}`}>\n        <div className=\"slider-track\" />\n        <div ref={rangeRef} className={`slider-range${disabled ? '_disabled' : ''}`}></div>\n        <input\n          data-testid={rest['data-testid'] ? rest['data-testid'] + '-input-test' : undefined}\n          className={`thumb${disabled ? '_disabled' : ''}`}\n          onChange={(e) => {\n            setMaxVal(+e.target.value);\n            if (onChange) onChange(+e.target.value);\n          }}\n          ref={maxValRef}\n          defaultValue={defaultValue as number}\n          disabled={disabled}\n          aria-label={rest['aria-label'] ? `${rest['aria-label']}-input` : 'slider-input'}\n          type=\"range\"\n          onInput={tooltip ? setValue : undefined}\n          min={min}\n          max={max}\n          list=\"items\"\n        />\n        {tooltipText && typeof tooltipText === 'string' && (\n          <span\n            className=\"tooltip top slider\"\n            data-testid={rest['data-testid'] ? rest['data-testid'] + '-tooltip-test' : undefined}\n            ref={bubbleRef}\n          >\n            {tooltipText}\n          </span>\n        )}\n        {withValueTrack && max && typeof min === 'number' && (\n          <div\n            className=\"tooltip-value-track\"\n            data-testid={rest['data-testid'] ? rest['data-testid'] + '-value-track-test' : undefined}\n          >\n            {Array.from(Array(max + 1), (_, i) => i).map((_elem) => (\n              <option\n                className=\"small\"\n                key={_elem}\n                value={_elem.toString()}\n                label={_elem.toString()}\n                style={{\n                  left: `calc(${((_elem - min) * 100) / (max - min)}% + ${\n                    12 - ((_elem - min) * 100) / (max - min)\n                  } * 0.26px)`,\n                  position: 'absolute',\n                }}\n              />\n            ))}\n          </div>\n        )}\n        <div data-testid={rest['data-testid'] ? rest['data-testid'] + '-label-test' : undefined} className=\"slider-label\">\n          <small>{label?.left}</small>\n          <small>{label?.right}</small>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst DoubleSlider: React.FC<ISlider> = (props) => {\n  const {\n    min = 0,\n    max = 100,\n    onChange,\n    disabled,\n    label,\n    tooltip,\n    tooltipText,\n    defaultValue,\n    className,\n    double: _,\n    ...rest\n  } = props;\n  const rangeRef = useRef<HTMLDivElement>(null);\n  const [minVal, setMinVal] = useState((defaultValue as DefProps)?.min || min);\n  const [maxVal, setMaxVal] = useState((defaultValue as DefProps)?.max || max);\n  const minValRef = useRef<HTMLInputElement>(null);\n  const maxValRef = useRef<HTMLInputElement>(null);\n  const bubbleRef = useRef<HTMLDivElement>(null);\n  const bubbleRef2 = useRef<HTMLDivElement>(null);\n  const bubbles = [bubbleRef, bubbleRef2];\n\n  const getPercent = useCallback((value: number) => Math.round(((value - min) / (max - min)) * 100), [min, max]);\n\n  useEffect(() => {\n    if (minValRef.current && maxValRef.current) {\n      setValue(Bubbles.bb1);\n      setValue(Bubbles.bb2);\n    }\n  }, []);\n\n  const setValue = (bubble?: number) => {\n    const reference = bubbles[bubble as number];\n    const valReference = bubble === 0 ? minValRef : maxValRef;\n    if (reference?.current && minValRef?.current && maxValRef?.current && valReference?.current) {\n      const thumbValue1 = +minValRef.current.value;\n      const thumbValue2 = +maxValRef.current.value;\n      if (thumbValue1 < thumbValue2) {\n        const val = +valReference.current.value;\n        const newVal = Number(((val - min) * 100) / (max - min));\n\n        reference.current.style.left = `calc(${newVal}% + (${10 - newVal * 0.213}px))`;\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (maxValRef.current) {\n      const minPercent = getPercent(minVal);\n      const maxPercent = getPercent(+maxValRef.current.value);\n\n      if (rangeRef.current) {\n        rangeRef.current.style.left = `${minPercent}%`;\n        rangeRef.current.style.width = `calc(${maxPercent - minPercent}% ${\n          maxPercent - minPercent < 50 && maxPercent < 50 ? '+ var(--unit) - 1%' : '- 1%'\n        })`;\n      }\n    }\n  }, [minVal, getPercent]);\n\n  useEffect(() => {\n    if (minValRef.current) {\n      const minPercent = getPercent(+minValRef.current.value);\n      const maxPercent = getPercent(maxVal);\n\n      if (rangeRef.current) {\n        rangeRef.current.style.width = `calc(${maxPercent - minPercent}% ${\n          maxPercent - minPercent < 50 && maxPercent < 50 ? '+ var(--unit) - 1%' : '- 1%'\n        })`;\n        rangeRef.current.style.left = `calc(${minPercent}%)`;\n      }\n    }\n  }, [maxVal, getPercent]);\n\n  return (\n    <div className={`slider-wrapper ${className || ''}`} {...rest}>\n      <div className=\"slider-track\"></div>\n      <div ref={rangeRef} className={`slider-range${disabled ? '_disabled' : ''}`}></div>\n      <div className=\"slider-input-container\">\n        <input\n          disabled={disabled}\n          type=\"range\"\n          className={`thumb${disabled ? '_disabled' : ''}`}\n          ref={minValRef}\n          min={min}\n          max={max}\n          data-testid={rest['data-testid'] ? rest['data-testid'] + '-input-test' : undefined}\n          value={minVal}\n          onInput={tooltip ? () => setValue(Bubbles.bb1) : undefined}\n          onChange={(e) => {\n            const value = Math.min(+e.target.value, maxVal - 1);\n            setMinVal(value);\n            if (onChange) onChange({min: value, max: maxVal});\n            e.target.value = value.toString();\n          }}\n        />\n        {(tooltipText as TTProps)?.min && (\n          <span\n            className=\"tooltip top slider\"\n            data-testid={rest['data-testid'] ? rest['data-testid'] + '-tooltip-test' : undefined}\n            ref={bubbleRef}\n          >\n            {(tooltipText as TTProps)?.min}\n          </span>\n        )}\n      </div>\n\n      <div className=\"slider-input-container\">\n        <input\n          disabled={disabled}\n          type=\"range\"\n          className={`thumb${disabled ? '_disabled' : ''}`}\n          ref={maxValRef}\n          value={maxVal}\n          min={min}\n          max={max}\n          data-testid={rest['data-testid'] ? rest['data-testid'] + '-input2-test' : undefined}\n          onInput={tooltip ? () => setValue(Bubbles.bb2) : undefined}\n          onChange={(e) => {\n            const value = Math.max(+e.target.value, minVal + 1);\n            setMaxVal(value);\n            if (onChange) onChange({min: minVal, max: value});\n            e.target.value = value.toString();\n          }}\n        />\n        {(tooltipText as TTProps)?.max && (\n          <span\n            className=\"tooltip top slider\"\n            data-testid={rest['data-testid'] ? rest['data-testid'] + '-tooltip2-test' : undefined}\n            ref={bubbleRef2}\n          >\n            {(tooltipText as TTProps).max}\n          </span>\n        )}\n      </div>\n      <div className=\"slider-label\" data-testid={rest['data-testid'] ? rest['data-testid'] + '-label-test' : undefined}>\n        <small>{label?.left}</small>\n        <small>{label?.right}</small>\n      </div>\n    </div>\n  );\n};\n\nexport default Slider;"],"names":["Bubbles","DoubleSlider","props","_a","min","_b","max","onChange","disabled","label","tooltip","tooltipText","defaultValue","className","double","rest","__rest","rangeRef","useRef","_c","__read","useState","minVal","setMinVal","_d","maxVal","setMaxVal","minValRef","maxValRef","bubbleRef","bubbleRef2","bubbles","getPercent","useCallback","value","Math","round","useEffect","current","setValue","bb1","bb2","bubble","reference","valReference","val","newVal","Number","style","left","concat","minPercent","maxPercent","width","_jsxs","jsxs","__assign","children","_jsx","jsx","ref","type","undefined","onInput","e","target","toString","right","withValueTrack","currentRef_1","addEventListener","document","activeElement","shiftKey","preventDefault","key","prev","list","Array","from","_","i","map","_elem","position"],"mappings":"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"}
{"version":3,"file":"index.esm.js","sources":["../../src/components/card/cardTop.tsx","../../src/components/card/cardImage.tsx","../../src/components/card/cardHeader.tsx","../../src/components/card/cardBody.tsx","../../src/components/card/cardFooter.tsx","../../src/components/teaserCard/teaserCard.tsx"],"sourcesContent":["import React from 'react';\n\nexport interface ICardTopProps {\n  /**\n   * Identifies the accordion item\n   */\n  id?: string;\n  /**\n   * Add class to accordion\n   */\n  className?: string;\n  [others: string]: any;\n}\n\nconst CardTop: React.FC<ICardTopProps> = (props) => {\n  const {id, children, className, ...rest} = props;\n\n  return (\n    <div id={id || ''} className={`card-top ${className || ''}`} {...rest}>\n      {children}\n    </div>\n  );\n};\n\nexport default CardTop;\n","import React from 'react';\n\nexport interface ICardImgProps {\n  /**\n   * Identifies the accordion item\n   */\n  id?: string;\n  /**\n   * Add class to accordion\n   */\n  className?: string;\n  [others: string]: any;\n}\n\nconst CardImg: React.FC<ICardImgProps> = (props) => {\n  const {id, children, className, ...rest} = props;\n  const {hoverButton, ...restAux} = rest;\n  return (\n    <div id={id || ''} key={id || 'card-img'} className={`card-img ${className || ''}`} {...restAux}>\n      {children}\n      {hoverButton}\n    </div>\n  );\n};\n\nexport default CardImg;\n","import React from 'react';\n\nexport interface ICardHeaderProps {\n  /**\n   * Identifies the accordion item\n   */\n  id?: string;\n  /**\n   * Add class to accordion\n   */\n  className?: string;\n  [others: string]: any;\n}\n\nconst CardHeader: React.FC<ICardHeaderProps> = (props) => {\n  const {id, children, className, ...rest} = props;\n\n  return (\n    <div id={id || ''} className={`card-header ${className || ''}`} {...rest}>\n      {children}\n    </div>\n  );\n};\n\nexport default CardHeader;\n","import React from 'react';\n\nexport interface ICardBodyProps {\n  /**\n   * Identifies the accordion item\n   */\n  id?: string;\n  /**\n   * Add class to accordion\n   */\n  className?: string;\n  [others: string]: any;\n}\n\nconst CardBody: React.FC<ICardBodyProps> = (props) => {\n  const {id, children, className, ...rest} = props;\n\n  return (\n    <div id={id || ''} className={`card-body ${className || ''}`} {...rest}>\n      {children}\n    </div>\n  );\n};\n\nexport default CardBody;\n","import React from 'react';\n\nexport interface ICardFooterProps {\n  /**\n   * Identifies the accordion item\n   */\n  id?: string;\n  /**\n   * Add class to accordion\n   */\n  className?: string;\n  [others: string]: any;\n}\n\nconst CardFooter: React.FC<ICardFooterProps> = (props) => {\n  const {id, children, className, ...rest} = props;\n\n  return (\n    <div id={id || ''} className={`card-footer ${className || ''}`} {...rest}>\n      {children}\n    </div>\n  );\n};\n\nexport default CardFooter;\n","import React from 'react';\n\nimport TeaserCardTop from '../card/cardTop';\nimport TeaserCardImg from '../card/cardImage';\nimport TeaserCardHeader from '../card/cardHeader';\nimport TeaserCardBody from '../card/cardBody';\nimport TeaserCardFooter from '../card/cardFooter';\n\nexport {default as TeaserCardTop} from '../card/cardTop';\nexport {default as TeaserCardImg} from '../card/cardImage';\nexport {default as TeaserCardHeader} from '../card/cardHeader';\nexport {default as TeaserCardBody} from '../card/cardBody';\nexport {default as TeaserCardFooter} from '../card/cardFooter';\n\nexport interface ITeaserCardProps {\n  /**\n   * Identifies the card\n   */\n  id?: string;\n  /**\n   * Add class to card\n   */\n  className?: string;\n  /**\n   * Set selected style in card\n   */\n  selected?: boolean;\n  /**\n   * onClick function\n   */\n  onClick?: () => void;\n  /**\n   * Parts of card, one of this is required\n   */\n  children:\n    | React.ReactElement<\n        | typeof TeaserCardTop\n        | typeof TeaserCardImg\n        | typeof TeaserCardHeader\n        | typeof TeaserCardBody\n        | typeof TeaserCardFooter\n      >[]\n    | React.ReactElement<\n        | typeof TeaserCardTop\n        | typeof TeaserCardImg\n        | typeof TeaserCardHeader\n        | typeof TeaserCardBody\n        | typeof TeaserCardFooter\n      >;\n  [others: string]: any;\n}\n\nconst TeaserCard: React.FC<ITeaserCardProps> = (props) => {\n  const {id, children, className, selected, onClick, ...rest} = props;\n  return (\n    <div\n      id={id || ''}\n      className={`card_teaser${selected ? '_selected' : ''} ${className || ''}`}\n      onClick={onClick}\n      {...rest}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default TeaserCard;\n"],"names":["CardTop","props","id","children","className","rest","_jsx","CardImg","hoverButton","restAux","__rest","_jsxs","__assign","concat","CardHeader","CardBody","CardFooter","TeaserCard","selected","onClick"],"mappings":"ilBAcM,IAAAA,EAAmC,SAACC,GACjC,IAAAC,EAAoCD,EAAKC,GAArCC,EAAgCF,EAAxBE,SAAEC,EAAsBH,YAARI,IAAQJ,EAArC,CAAkC,KAAA,WAAA,cAExC,OACEK,WAAKJ,GAAIA,GAAM,GAAIE,UAAW,mBAAYA,GAAa,KAAUC,EAC9D,CAAAF,SAAAA,IAGP,ECRMI,EAAmC,SAACN,GACjC,IAAAC,EAAoCD,EAAKC,GAArCC,EAAgCF,EAAxBE,SAAEC,EAAsBH,YAARI,IAAQJ,EAArC,CAAkC,KAAA,WAAA,cACjCO,EAA2BH,EAAhBG,YAAKC,EAAOC,EAAIL,EAA5B,CAAyB,gBAC/B,OACEM,EAAK,MAAAC,EAAA,CAAAV,GAAIA,GAAM,GAA2BE,UAAW,YAAAS,OAAYT,GAAa,KAAUK,EACrF,CAAAN,SAAA,CAAAA,EACAK,KAFqBN,GAAM,WAKlC,ECTMY,EAAyC,SAACb,GACvC,IAAAC,EAAoCD,EAAKC,GAArCC,EAAgCF,EAAxBE,SAAEC,EAAsBH,YAARI,IAAQJ,EAArC,CAAkC,KAAA,WAAA,cAExC,OACEK,WAAKJ,GAAIA,GAAM,GAAIE,UAAW,sBAAeA,GAAa,KAAUC,EACjE,CAAAF,SAAAA,IAGP,ECRMY,EAAqC,SAACd,GACnC,IAAAC,EAAoCD,EAAKC,GAArCC,EAAgCF,EAAxBE,SAAEC,EAAsBH,YAARI,IAAQJ,EAArC,CAAkC,KAAA,WAAA,cAExC,OACEK,WAAKJ,GAAIA,GAAM,GAAIE,UAAW,oBAAaA,GAAa,KAAUC,EAC/D,CAAAF,SAAAA,IAGP,ECRMa,EAAyC,SAACf,GACvC,IAAAC,EAAoCD,EAAKC,GAArCC,EAAgCF,EAAxBE,SAAEC,EAAsBH,YAARI,IAAQJ,EAArC,CAAkC,KAAA,WAAA,cAExC,OACEK,WAAKJ,GAAIA,GAAM,GAAIE,UAAW,sBAAeA,GAAa,KAAUC,EACjE,CAAAF,SAAAA,IAGP,EC8BMc,EAAyC,SAAChB,GACvC,IAAAC,EAAuDD,EAAKC,GAAxDC,EAAmDF,EAA3CE,SAAEC,EAAyCH,EAAhCG,UAAEc,EAA8BjB,EAAKiB,SAAzBC,EAAoBlB,EAAKkB,QAAbd,EAAQK,EAAAT,EAAxD,CAAA,KAAA,WAAA,YAAA,WAAA,YACN,OACEK,EAAA,MAAAM,EAAA,CACEV,GAAIA,GAAM,GACVE,UAAW,cAAcS,OAAAK,EAAW,YAAc,GAAM,KAAAL,OAAAT,GAAa,IACrEe,QAASA,GACLd,EAAI,CAAAF,SAEPA,IAGP"}